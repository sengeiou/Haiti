DECLARE
  STMT_DDL VARCHAR2(2000);
BEGIN
  STMT_DDL := 'CREATE TABLE WS_METERCONFIG_LOG('||
              '  TRID VARCHAR2(40 BYTE) NOT NULL '||
              ', ATTRIBUTE_NO VARCHAR2(256 BYTE) '||
              ', CLASS_ID VARCHAR2(256 BYTE) '||
              ', COMMAND VARCHAR2(256 BYTE) '||
              ', DESCRIPTION VARCHAR2(256 BYTE) '||
              ', DEVICEID VARCHAR2(20 BYTE) '||
              ', DEVICETYPE VARCHAR2(20 BYTE) '||
              ', ERRORCODE NUMBER(10, 0) '||
              ', MODEMID VARCHAR2(20 BYTE) '||
              ', MODEM_TYPE VARCHAR2(32 BYTE) '||
              ', OBIS_CODE VARCHAR2(256 BYTE) '||
              ', OPERATOR VARCHAR2(100 BYTE) '||
              ', PARAMETER VARCHAR2(500 BYTE) '||
              ', PROTOCOL_TYPE VARCHAR2(32 BYTE) '||
              ', STATE NUMBER(10, 0) '||
              ', UPDATE_DATE VARCHAR2(14 BYTE) '||
              ', WRITE_DATE VARCHAR2(14 BYTE) NOT NULL  '||
              ', REQUEST_DATE VARCHAR2(14 BYTE) NOT NULL  '|| 
              ') '||
              'PARTITION BY RANGE (REQUEST_DATE) '||
              '( '||
              ' PARTITION PART'||TO_CHAR(CURRENT_DATE,'YYYYMM')||'01 VALUES LESS THAN ('''||TO_CHAR(ADD_MONTHS(CURRENT_DATE,1),'YYYYMM')||''') '||CHR(10)||
              ') TABLESPACE AIMIRPART';

EXECUTE IMMEDIATE STMT_DDL;

   STMT_DDL := 'CREATE UNIQUE INDEX WS_METERCONFIG_LOG_PK ON WS_METERCONFIG_LOG(REQUEST_DATE,TRID) LOCAL TABLESPACE AIMIRPART';
    EXECUTE IMMEDIATE STMT_DDL;
    STMT_DDL := 'ALTER TABLE WS_METERCONFIG_LOG ADD CONSTRAINT WS_METERCONFIG_LOG_PK PRIMARY KEY(REQUEST_DATE,TRID) USING INDEX';
    EXECUTE IMMEDIATE STMT_DDL;
    STMT_DDL := 'CREATE INDEX WS_METERCONFIG_LOG_IDX_01 ON WS_METERCONFIG_LOG(REQUEST_DATE,DEVICEID,STATE) LOCAL TABLESPACE AIMIRPART';
    EXECUTE IMMEDIATE STMT_DDL;

  STMT_DDL := 'CREATE TABLE WS_METERCONFIG_RESULT  '||
              '( '||
              '  COMMAND VARCHAR2(256 BYTE)  '||
              ', DEVICEID VARCHAR2(20 BYTE) '||
              ', RESULTVALUE VARCHAR2(500 BYTE)  '||
              ', NUM NUMBER(16, 0) NOT NULL  '||
              ', TRID VARCHAR2(40 BYTE) NOT NULL  '||
              ', WRITE_DATE VARCHAR2(14 BYTE) NOT NULL  '||
              ', REQUEST_DATE VARCHAR2(14 BYTE) NOT NULL  '||               
              ')   '||
              'PARTITION BY RANGE (REQUEST_DATE) '||
              '( '||
              ' PARTITION PART'||TO_CHAR(CURRENT_DATE,'YYYYMM')||'01 VALUES LESS THAN ('''||TO_CHAR(ADD_MONTHS(CURRENT_DATE,1),'YYYYMM')||''') '||CHR(10)||
              ') TABLESPACE AIMIRPART';
EXECUTE IMMEDIATE STMT_DDL;
   STMT_DDL := 'CREATE UNIQUE INDEX WS_METERCONFIG_RESULT_PK ON WS_METERCONFIG_RESULT(REQUEST_DATE,TRID) LOCAL TABLESPACE AIMIRPART';
    EXECUTE IMMEDIATE STMT_DDL;
    STMT_DDL := 'ALTER TABLE WS_METERCONFIG_RESULT ADD CONSTRAINT WS_METERCONFIG_RESULT_PK PRIMARY KEY(REQUEST_DATE,TRID) USING INDEX';
    EXECUTE IMMEDIATE STMT_DDL;
  END;
/

CREATE TABLE WS_METERCONFIG_USER 
(
  ID NUMBER(10, 0) NOT NULL 
, DESCRIPTION VARCHAR2(255 BYTE) 
, PASSWORD VARCHAR2(255 BYTE) 
, UPDATE_DATE VARCHAR2(14 BYTE) 
, USERID VARCHAR2(100 BYTE) NOT NULL 
, WRITE_DATE VARCHAR2(14 BYTE) 
, CONSTRAINT WS_METERCONFIG_USER_PK PRIMARY KEY (ID)
) 
TABLESPACE AIMIR ;
CREATE UNIQUE INDEX IDX_WS_METERCONFIG_USER_01 ON WS_METERCONFIG_USER (USERID);
CREATE SEQUENCE WS_METERCONFIG_USER_SEQ;

CREATE TABLE WS_METERCONFIG_OBIS 
(
  ID NUMBER(10, 0) NOT NULL 
, ATTRIBUTE_NO VARCHAR2(255 BYTE) 
, CLASS_ID VARCHAR2(255 BYTE) 
, WS_METERCONFIG_USER_ID NUMBER(10, 0) 
, OBIS_CODE VARCHAR2(255 BYTE) 
, PERMISSION VARCHAR2(255 BYTE) 
, CONSTRAINT WS_METERCONFIG_OBIS_USER_ID_FK FOREIGN KEY(WS_METERCONFIG_USER_ID) REFERENCES WS_METERCONFIG_USER(ID)
, CONSTRAINT WS_METERCONFIG_OBIS_PK PRIMARY KEY (ID)
) 
TABLESPACE AIMIR;

CREATE UNIQUE INDEX IDX_WS_METERCONFIG_OBIS_01 ON WS_METERCONFIG_OBIS (WS_METERCONFIG_USER_ID ASC, OBIS_CODE ASC, CLASS_ID ASC, ATTRIBUTE_NO ASC); 
CREATE SEQUENCE WS_METERCONFIG_OBIS_SEQ;

Insert into AIMIR.WS_METERCONFIG_USER (ID,DESCRIPTION,PASSWORD,UPDATE_DATE,USERID,WRITE_DATE) values (WS_METERCONFIG_USER_SEQ.nextval,null,'utNvWGjQrYQ/qe44hyG0Kg==',null,'aimir',null);
Insert into AIMIR.WS_METERCONFIG_OBIS (ID,ATTRIBUTE_NO,CLASS_ID,WS_METERCONFIG_USER_ID,OBIS_CODE,PERMISSION) values (WS_METERCONFIG_OBIS_SEQ.nextval,null,null,(select max(id) from  AIMIR.WS_METERCONFIG_USER where USERID='aimir') ,'USER','AUDSGL');

INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) 
values ('WS_METERCONFIG_LOG','MONTHLY','ALTER TABLE WS_METERCONFIG_LOG ADD PARTITION PART{STARTDATE} VALUES LESS THAN(''{NEXTPERIODMONTH}'') update indexes','mm',3,0,1);
INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) 
values ('WS_METERCONFIG_LOG DROP','MONTHLY','ALTER TABLE WS_METERCONFIG_LOG DROP PARTITION PART{STARTDATE} update indexes','mm',0,-365,1);

INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) 
values ('WS_METERCONFIG_RESULT','MONTHLY','ALTER TABLE WS_METERCONFIG_RESULT ADD PARTITION PART{STARTDATE} VALUES LESS THAN(''{NEXTPERIODMONTH}'') update indexes','mm',3,0,1);
INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) 
values ('WS_METERCONFIG_RESULT DROP','MONTHLY','ALTER TABLE WS_METERCONFIG_RESULT DROP PARTITION PART{STARTDATE} update indexes','mm',0,-365,1);

commit work;