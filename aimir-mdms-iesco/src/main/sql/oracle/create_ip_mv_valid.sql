CREATE TABLE IP_MV_OPTION
(
  CODETYPE VARCHAR2(2),
  ATTRIBUTENAME  VARCHAR2(30),
  ATTRIBUTEVALUE VARCHAR2(60),
  CONSTRAINT IP_MV_OPTION_PK PRIMARY KEY (CODETYPE,ATTRIBUTENAME)
) TABLESPACE AIMIRINT;

Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_VALIDATION_SUPPORT','TRUE');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('HI','CNF_VALIDATION_ERRORLOG','FALSE');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('HI','CNF_MOVETEMP_ROWCOUNT','100000');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_OLDMV_VDAYS','10');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_VAL_NEGATIVE_MV','TRUE');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_VAL_MAXDIGIT_MV','TRUE');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_VAL_MAXDIGIT_EM_VALUE','99999999');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_VAL_MAXDIGIT_WM_VALUE','99999999');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_VAL_MAXDIGIT_GM_VALUE','99999999');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_VAL_MAXDIGIT_HM_VALUE','99999999');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_BATCH_MAXSIZE','50000');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_DELIVERY_EM','TRUE');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_DELIVERY_WM','TRUE');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_DELIVERY_GM','TRUE');
Insert into IP_MV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_DELIVERY_HM','TRUE');

commit work;

DECLARE
  STMT_DDL VARCHAR2(2000);
BEGIN
  STMT_DDL := 'CREATE TABLE IP_MV_VALID_LOG '||
              '( '||
              '  CREATEDATE TIMESTAMP DEFAULT SYSTIMESTAMP, '||
              '  TABLENUM NUMBER, '||
              '  MESSAGE VARCHAR2(300) '||
              ') '||
              'PARTITION BY RANGE (CREATEDATE) '||
              '( '||
              '  PARTITION PART'||to_char(CURRENT_DATE,'YYYYMMDD')||' VALUES LESS THAN (TO_TIMESTAMP('''||to_char(CURRENT_DATE+1,'YYYYMMDD')||''',''YYYYMMDD'')) '||
              ') TABLESPACE AIMIRPART ';
    EXECUTE IMMEDIATE STMT_DDL;
END;
/

Insert into PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) values ('IP_MV_VALID_LOG','DAILY','ALTER TABLE IP_MV_VALID_LOG ADD PARTITION PART{STARTDATE} VALUES LESS THAN(TO_TIMESTAMP(''{NEXTPERIODDATE}'',''YYYYMMDD'')) update indexes','dd',10,0,1);
Insert into PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) values ('IP_MV_VALID_LOG DROP','DAILY','ALTER TABLE IP_MV_VALID_LOG DROP PARTITION PART{STARTDATE} update indexes','dd',15,-365,1);

CREATE OR REPLACE PACKAGE AIMIR_VALIDATION AS
  PROCEDURE PROCESS_MV;
  PROCEDURE PROCESS_MV_SCHEDULE(TABLENAME VARCHAR2, TABLENUMBER NUMBER);
END AIMIR_VALIDATION;
/

CREATE OR REPLACE PACKAGE BODY AIMIR_VALIDATION AS

  -- SYSTEM CONFIGURATION
  CNF_VALIDATION_SUPPORT VARCHAR2(20) := 'FALSE';
  CNF_VALIDATION_ERRORLOG VARCHAR2(20) := 'FALSE';
  CNF_MOVETEMP_ROWCOUNT NUMBER := 1000;
  -- VALIDATION CONFIGURATION
  CNF_OLDMV_VDAYS NUMBER :=10;
  CNF_VAL_NEGATIVE_MV VARCHAR2(10) := 'FALSE';
  CNF_VAL_MAXDIGIT_MV VARCHAR2(10) := 'FALSE';
  CNF_VAL_MAXDIGIT_EM_VALUE NUMBER := 0;
  CNF_VAL_MAXDIGIT_WM_VALUE NUMBER := 0;
  CNF_VAL_MAXDIGIT_GM_VALUE NUMBER := 0;
  CNF_VAL_MAXDIGIT_HM_VALUE NUMBER := 0;

  TYPE TargetMeterValueType IS REF CURSOR;
  TYPE TargetMeterRecordType IS RECORD
  (
    MDEV_ID          VARCHAR2(20),
    MDEV_TYPE        VARCHAR2(20),
    CHANNEL          NUMBER,
    MAXDATE          VARCHAR2(14),
    MINDATE          VARCHAR2(14)
  );

  FUNCTION GET_OPTION_STR(
    ATTRIBUTENAME_ IN IP_MV_OPTION.ATTRIBUTENAME%TYPE,
    DEFAULTVALUE IN IP_MV_OPTION.ATTRIBUTEVALUE%TYPE DEFAULT NULL
    ) RETURN IP_MV_OPTION.ATTRIBUTEVALUE%TYPE IS
    RETVAL IP_MV_OPTION.ATTRIBUTEVALUE%TYPE;
  BEGIN
    SELECT ATTRIBUTEVALUE
    INTO RETVAL
    FROM IP_MV_OPTION
    WHERE ATTRIBUTENAME=ATTRIBUTENAME_;
    RETURN RETVAL;
  EXCEPTION
  WHEN OTHERS THEN
    RETURN DEFAULTVALUE;
  END GET_OPTION_STR;

  FUNCTION GET_OPTION_NUMBER(
    ATTRIBUTENAME_ IN IP_MV_OPTION.ATTRIBUTENAME%TYPE,
    DEFAULTVALUE IN NUMBER DEFAULT NULL
    ) RETURN NUMBER IS
    RETVAL NUMBER;
  BEGIN
    SELECT TO_NUMBER(ATTRIBUTEVALUE)
    INTO RETVAL
    FROM IP_MV_OPTION
    WHERE ATTRIBUTENAME=ATTRIBUTENAME_;
    RETURN RETVAL;
  EXCEPTION
  WHEN OTHERS THEN
    RETURN DEFAULTVALUE;
  END GET_OPTION_NUMBER;

  -- Validation configuration
  PROCEDURE GET_OPTIONS AS
  BEGIN
    CNF_VALIDATION_SUPPORT    := UPPER(GET_OPTION_STR('CNF_VALIDATION_SUPPORT', 'FALSE'));
    CNF_VALIDATION_ERRORLOG   := UPPER(GET_OPTION_STR('CNF_VALIDATION_ERRORLOG', 'FALSE'));
    CNF_MOVETEMP_ROWCOUNT     := GET_OPTION_NUMBER('CNF_MOVETEMP_ROWCOUNT', 5000);
    CNF_OLDMV_VDAYS           := GET_OPTION_NUMBER('CNF_OLDMV_VDAYS', 10);
    CNF_VAL_NEGATIVE_MV       := UPPER(GET_OPTION_STR('CNF_VAL_NEGATIVE_MV', 'FALSE'));
    CNF_VAL_MAXDIGIT_MV       := UPPER(GET_OPTION_STR('CNF_VAL_MAXDIGIT_MV', 'FALSE'));
    CNF_VAL_MAXDIGIT_EM_VALUE := GET_OPTION_NUMBER('CNF_VAL_MAXDIGIT_EM_VALUE', 0);
    CNF_VAL_MAXDIGIT_WM_VALUE := GET_OPTION_NUMBER('CNF_VAL_MAXDIGIT_WM_VALUE', 0);
    CNF_VAL_MAXDIGIT_GM_VALUE := GET_OPTION_NUMBER('CNF_VAL_MAXDIGIT_GM_VALUE', 0);
    CNF_VAL_MAXDIGIT_HM_VALUE := GET_OPTION_NUMBER('CNF_VAL_MAXDIGIT_HM_VALUE', 0);
  END GET_OPTIONS;

  PROCEDURE MOVETEMPMV(TABLENAME VARCHAR2, TABLENUMBER NUMBER) AS
    err_num NUMBER;
    err_msg VARCHAR2(100);
  BEGIN
    CASE TABLENAME
    WHEN 'EM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        INSERT INTO IP_MV_VALID_EM_0(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_EM
        WHERE TABLENUMBER = '0' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_EM WHERE TABLENUMBER = '0'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_EM WHERE TABLENUMBER = '0' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_EM_0);

      WHEN 1 THEN
        INSERT INTO IP_MV_VALID_EM_1(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_EM
        WHERE TABLENUMBER = '1' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_EM WHERE TABLENUMBER = '1'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_EM WHERE TABLENUMBER = '1' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_EM_1);

      WHEN 2 THEN
        INSERT INTO IP_MV_VALID_EM_2(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_EM
        WHERE TABLENUMBER = '2' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_EM WHERE TABLENUMBER = '2'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_EM WHERE TABLENUMBER = '2' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_EM_2);

      WHEN 3 THEN
        INSERT INTO IP_MV_VALID_EM_3(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_EM
        WHERE TABLENUMBER = '3' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_EM WHERE TABLENUMBER = '3'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_EM WHERE TABLENUMBER = '3' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_EM_3);

      WHEN 4 THEN
        INSERT INTO IP_MV_VALID_EM_4(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_EM
        WHERE TABLENUMBER = '4' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_EM WHERE TABLENUMBER = '4'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_EM WHERE TABLENUMBER = '4' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_EM_4);

      WHEN 5 THEN
        INSERT INTO IP_MV_VALID_EM_5(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_EM
        WHERE TABLENUMBER = '5' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_EM WHERE TABLENUMBER = '5'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_EM WHERE TABLENUMBER = '5' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_EM_5);

      WHEN 6 THEN
        INSERT INTO IP_MV_VALID_EM_6(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_EM
        WHERE TABLENUMBER = '6' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_EM WHERE TABLENUMBER = '6'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_EM WHERE TABLENUMBER = '6' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_EM_6);

      WHEN 7 THEN
        INSERT INTO IP_MV_VALID_EM_7(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_EM
        WHERE TABLENUMBER = '7' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_EM WHERE TABLENUMBER = '7'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_EM WHERE TABLENUMBER = '7' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_EM_7);

      WHEN 8 THEN
        INSERT INTO IP_MV_VALID_EM_8(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_EM
        WHERE TABLENUMBER = '8' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_EM WHERE TABLENUMBER = '8'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_EM WHERE TABLENUMBER = '8' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_EM_8);

      WHEN 9 THEN
        INSERT INTO IP_MV_VALID_EM_9(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_EM
        WHERE TABLENUMBER = '9' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_EM WHERE TABLENUMBER = '9'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_EM WHERE TABLENUMBER = '9' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_EM_9);

      END CASE;
    WHEN 'WM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        INSERT INTO IP_MV_VALID_WM_0(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_WM
        WHERE TABLENUMBER = '0' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_WM WHERE TABLENUMBER = '0'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_WM WHERE TABLENUMBER = '0' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_WM_0);

      WHEN 1 THEN
        INSERT INTO IP_MV_VALID_WM_1(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_WM
        WHERE TABLENUMBER = '1' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_WM WHERE TABLENUMBER = '1'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_WM WHERE TABLENUMBER = '1' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_WM_1);

      WHEN 2 THEN
        INSERT INTO IP_MV_VALID_WM_2(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_WM
        WHERE TABLENUMBER = '2' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_WM WHERE TABLENUMBER = '2'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_WM WHERE TABLENUMBER = '2' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_WM_2);

      WHEN 3 THEN
        INSERT INTO IP_MV_VALID_WM_3(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_WM
        WHERE TABLENUMBER = '3' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_WM WHERE TABLENUMBER = '3'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_WM WHERE TABLENUMBER = '3' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_WM_3);

      WHEN 4 THEN
        INSERT INTO IP_MV_VALID_WM_4(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_WM
        WHERE TABLENUMBER = '4' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_WM WHERE TABLENUMBER = '4'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_WM WHERE TABLENUMBER = '4' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_WM_4);

      WHEN 5 THEN
        INSERT INTO IP_MV_VALID_WM_5(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_WM
        WHERE TABLENUMBER = '5' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_WM WHERE TABLENUMBER = '5'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_WM WHERE TABLENUMBER = '5' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_WM_5);

      WHEN 6 THEN
        INSERT INTO IP_MV_VALID_WM_6(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_WM
        WHERE TABLENUMBER = '6' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_WM WHERE TABLENUMBER = '6'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_WM WHERE TABLENUMBER = '6' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_WM_6);

      WHEN 7 THEN
        INSERT INTO IP_MV_VALID_WM_7(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_WM
        WHERE TABLENUMBER = '7' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_WM WHERE TABLENUMBER = '7'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_WM WHERE TABLENUMBER = '7' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_WM_7);

      WHEN 8 THEN
        INSERT INTO IP_MV_VALID_WM_8(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_WM
        WHERE TABLENUMBER = '8' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_WM WHERE TABLENUMBER = '8'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_WM WHERE TABLENUMBER = '8' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_WM_8);

      WHEN 9 THEN
        INSERT INTO IP_MV_VALID_WM_9(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_WM
        WHERE TABLENUMBER = '9' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_WM WHERE TABLENUMBER = '9'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_WM WHERE TABLENUMBER = '9' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_WM_9);

      END CASE;
    WHEN 'GM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        INSERT INTO IP_MV_VALID_GM_0(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_GM
        WHERE TABLENUMBER = '0' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_GM WHERE TABLENUMBER = '0'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_GM WHERE TABLENUMBER = '0' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_GM_0);

      WHEN 1 THEN
        INSERT INTO IP_MV_VALID_GM_1(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_GM
        WHERE TABLENUMBER = '1' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_GM WHERE TABLENUMBER = '1'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_GM WHERE TABLENUMBER = '1' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_GM_1);

      WHEN 2 THEN
        INSERT INTO IP_MV_VALID_GM_2(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_GM
        WHERE TABLENUMBER = '2' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_GM WHERE TABLENUMBER = '2'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_GM WHERE TABLENUMBER = '2' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_GM_2);

      WHEN 3 THEN
        INSERT INTO IP_MV_VALID_GM_3(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_GM
        WHERE TABLENUMBER = '3' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_GM WHERE TABLENUMBER = '3'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_GM WHERE TABLENUMBER = '3' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_GM_3);

      WHEN 4 THEN
        INSERT INTO IP_MV_VALID_GM_4(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_GM
        WHERE TABLENUMBER = '4' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_GM WHERE TABLENUMBER = '4'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_GM WHERE TABLENUMBER = '4' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_GM_4);

      WHEN 5 THEN
        INSERT INTO IP_MV_VALID_GM_5(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_GM
        WHERE TABLENUMBER = '5' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_GM WHERE TABLENUMBER = '5'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_GM WHERE TABLENUMBER = '5' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_GM_5);

      WHEN 6 THEN
        INSERT INTO IP_MV_VALID_GM_6(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_GM
        WHERE TABLENUMBER = '6' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_GM WHERE TABLENUMBER = '6'
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_GM WHERE TABLENUMBER = '6' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_GM_6);

      WHEN 7 THEN
        INSERT INTO IP_MV_VALID_GM_7(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_GM
        WHERE TABLENUMBER = '7' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_GM WHERE TABLENUMBER = '7'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_GM WHERE TABLENUMBER = '7' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_GM_7);

      WHEN 8 THEN
        INSERT INTO IP_MV_VALID_GM_8(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_GM
        WHERE TABLENUMBER = '8' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_GM WHERE TABLENUMBER = '8'
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_GM WHERE TABLENUMBER = '8' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_GM_8);

      WHEN 9 THEN
        INSERT INTO IP_MV_VALID_GM_9(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_GM
        WHERE TABLENUMBER = '9' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_GM WHERE TABLENUMBER = '9'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_GM WHERE TABLENUMBER = '9' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_GM_9);

      END CASE;
    WHEN 'HM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        INSERT INTO IP_MV_VALID_HM_0(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_HM
        WHERE TABLENUMBER = '0' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_HM WHERE TABLENUMBER = '0'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_HM WHERE TABLENUMBER = '0' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_HM_0);

      WHEN 1 THEN
        INSERT INTO IP_MV_VALID_HM_1(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_HM
        WHERE TABLENUMBER = '1' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_HM WHERE TABLENUMBER = '1'
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_HM WHERE TABLENUMBER = '1' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_HM_1);

      WHEN 2 THEN
        INSERT INTO IP_MV_VALID_HM_2(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_HM
        WHERE TABLENUMBER = '2' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_HM WHERE TABLENUMBER = '2'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_HM WHERE TABLENUMBER = '2' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_HM_2);

      WHEN 3 THEN
        INSERT INTO IP_MV_VALID_HM_3(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_HM
        WHERE TABLENUMBER = '3' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_HM WHERE TABLENUMBER = '3'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_HM WHERE TABLENUMBER = '3' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_HM_3);

      WHEN 4 THEN
        INSERT INTO IP_MV_VALID_HM_4(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_HM
        WHERE TABLENUMBER = '4' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_HM WHERE TABLENUMBER = '4'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_HM WHERE TABLENUMBER = '4' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_HM_4);

      WHEN 5 THEN
        INSERT INTO IP_MV_VALID_HM_5(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_HM
        WHERE TABLENUMBER = '5' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_HM WHERE TABLENUMBER = '5'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_HM WHERE TABLENUMBER = '5' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_HM_5);

      WHEN 6 THEN
        INSERT INTO IP_MV_VALID_HM_6(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_HM
        WHERE TABLENUMBER = '6' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_HM WHERE TABLENUMBER = '6'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_HM WHERE TABLENUMBER = '6' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_HM_6);

      WHEN 7 THEN
        INSERT INTO IP_MV_VALID_HM_7(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_HM
        WHERE TABLENUMBER = '7' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_HM WHERE TABLENUMBER = '7'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_HM WHERE TABLENUMBER = '7' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_HM_7);

      WHEN 8 THEN
        INSERT INTO IP_MV_VALID_HM_8(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_HM
        WHERE TABLENUMBER = '8' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_HM WHERE TABLENUMBER = '8'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_HM WHERE TABLENUMBER = '8' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_HM_8);

      WHEN 9 THEN
        INSERT INTO IP_MV_VALID_HM_9(ROWIDFORDELETE,YYYYMMDDHHMMSS,CHANNEL,
               MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        SELECT ROWID,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,
               MV_VALUE,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME
        FROM IP_MV_VALID_HM
        WHERE TABLENUMBER = '9' AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL AND CAP_DEVICE_ID IS NOT NULL
          AND MDEV_ID IN (SELECT DISTINCT MDEV_ID FROM IP_MV_VALID_HM WHERE TABLENUMBER = '9'
                          AND CAP_DATE_METER IS NOT NULL AND CAP_DATE_DCU IS NOT NULL
                          AND ROWNUM < CNF_MOVETEMP_ROWCOUNT);

        DELETE FROM IP_MV_VALID_HM WHERE TABLENUMBER = '9' AND ROWID IN (SELECT ROWIDFORDELETE FROM IP_MV_VALID_HM_9);

      END CASE;
    END CASE;

    EXCEPTION
    WHEN OTHERS THEN
      err_num := SQLCODE;
      err_msg := SUBSTR(SQLERRM, 1, 100);
      IF CNF_VALIDATION_ERRORLOG = 'TRUE' THEN
        INSERT INTO IP_MV_VALID_LOG(TABLENUM,MESSAGE)
        VALUES(TABLENUMBER,'MOVETEMPMV Exception: '||err_num||' '||err_msg);
      END IF;

  END MOVETEMPMV;

  PROCEDURE MOVETEMPMVALL AS
    TABLENUMBER NUMBER;
  BEGIN
    GET_OPTIONS;
    FOR TABLENAME IN (select 'EM' as name from dual union select 'GM' as name from dual union select 'WM' from dual union select 'HM' from dual)
    LOOP
      FOR TABLENUMBER IN 0..9
      LOOP
        MOVETEMPMV(TABLENAME.name,TABLENUMBER);
      END LOOP;
    END LOOP;
  END MOVETEMPMVALL;

  PROCEDURE INSERT_DATA(
    P_TABLENAME VARCHAR2,
    P_YYYYMMDDHHMMSS IN VARCHAR2,
    P_CHANNEL IN NUMBER,
    P_MDEV_ID IN VARCHAR2,
    P_MDEV_TYPE IN VARCHAR2,
    P_LOCATION_ID IN NUMBER,
    P_MV_VALUE IN FLOAT,
    P_MV_VALID IN NUMBER,
    P_MV_STATUS IN NUMBER,
    P_CAP_DATE_METER IN NUMBER,
    P_CAP_DATE_DCU IN NUMBER,
    P_CAP_DEVICE_TYPE IN VARCHAR2,
    P_CAP_DEVICE_ID IN VARCHAR2,
    P_LPCREATEDTIME IN TIMESTAMP WITH TIME ZONE
  ) AS
  BEGIN
    BEGIN
      CASE P_TABLENAME
      WHEN 'EM' THEN
        INSERT INTO IP_MV_DATA_EM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'WM' THEN
        INSERT INTO IP_MV_DATA_WM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'GM' THEN
        INSERT INTO IP_MV_DATA_GM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'HM' THEN
        INSERT INTO IP_MV_DATA_HM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      END CASE;

      CASE P_TABLENAME
      WHEN 'EM' THEN
        INSERT INTO IP_MV_DELIVERY_EM(YYYYMMDD,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(SUBSTR(P_YYYYMMDDHHMMSS,0,8),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'WM' THEN
        INSERT INTO IP_MV_DELIVERY_WM(YYYYMMDD,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(SUBSTR(P_YYYYMMDDHHMMSS,0,8),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'GM' THEN
        INSERT INTO IP_MV_DELIVERY_GM(YYYYMMDD,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(SUBSTR(P_YYYYMMDDHHMMSS,0,8),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'HM' THEN
        INSERT INTO IP_MV_DELIVERY_HM(YYYYMMDD,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(SUBSTR(P_YYYYMMDDHHMMSS,0,8),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      END CASE;

      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
        NULL;
    END;
  END INSERT_DATA;

  PROCEDURE SEND_DATA_XX(TABLENAME VARCHAR2, TABLENUMBER NUMBER) AS
    STMT_SELECT VARCHAR2(2000);
    CUR_TARGETMV TargetMeterValueType;
    TARGETMV IP_MV_VALID_EM_0%ROWTYPE;
  BEGIN
    STMT_SELECT := 'SELECT * FROM IP_MV_VALID_'||TABLENAME||'_'||TABLENUMBER||' WHERE MV_VALID IS NOT NULL';

    OPEN CUR_TARGETMV FOR STMT_SELECT;
    LOOP
      FETCH CUR_TARGETMV INTO TARGETMV;
      EXIT WHEN CUR_TARGETMV%NOTFOUND;

      CASE TABLENAME
      WHEN 'EM' THEN
        INSERT_DATA('EM',TARGETMV.YYYYMMDDHHMMSS,TARGETMV.CHANNEL,TARGETMV.MDEV_ID,TARGETMV.MDEV_TYPE,TARGETMV.LOCATION_ID,TARGETMV.MV_VALUE,TARGETMV.MV_VALID,TARGETMV.MV_STATUS,TARGETMV.CAP_DATE_METER,TARGETMV.CAP_DATE_DCU,TARGETMV.CAP_DEVICE_TYPE,TARGETMV.CAP_DEVICE_ID,TARGETMV.LPCREATEDTIME);
      WHEN 'GM' THEN
        INSERT_DATA('GM',TARGETMV.YYYYMMDDHHMMSS,TARGETMV.CHANNEL,TARGETMV.MDEV_ID,TARGETMV.MDEV_TYPE,TARGETMV.LOCATION_ID,TARGETMV.MV_VALUE,TARGETMV.MV_VALID,TARGETMV.MV_STATUS,TARGETMV.CAP_DATE_METER,TARGETMV.CAP_DATE_DCU,TARGETMV.CAP_DEVICE_TYPE,TARGETMV.CAP_DEVICE_ID,TARGETMV.LPCREATEDTIME);
      WHEN 'WM' THEN
        INSERT_DATA('WM',TARGETMV.YYYYMMDDHHMMSS,TARGETMV.CHANNEL,TARGETMV.MDEV_ID,TARGETMV.MDEV_TYPE,TARGETMV.LOCATION_ID,TARGETMV.MV_VALUE,TARGETMV.MV_VALID,TARGETMV.MV_STATUS,TARGETMV.CAP_DATE_METER,TARGETMV.CAP_DATE_DCU,TARGETMV.CAP_DEVICE_TYPE,TARGETMV.CAP_DEVICE_ID,TARGETMV.LPCREATEDTIME);
      WHEN 'HM' THEN
        INSERT_DATA('HM',TARGETMV.YYYYMMDDHHMMSS,TARGETMV.CHANNEL,TARGETMV.MDEV_ID,TARGETMV.MDEV_TYPE,TARGETMV.LOCATION_ID,TARGETMV.MV_VALUE,TARGETMV.MV_VALID,TARGETMV.MV_STATUS,TARGETMV.CAP_DATE_METER,TARGETMV.CAP_DATE_DCU,TARGETMV.CAP_DEVICE_TYPE,TARGETMV.CAP_DEVICE_ID,TARGETMV.LPCREATEDTIME);
      END CASE;

    END LOOP;
    CLOSE CUR_TARGETMV;

    CASE TABLENAME
    WHEN 'EM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        DELETE FROM IP_MV_VALID_EM_0;
      WHEN 1 THEN
        DELETE FROM IP_MV_VALID_EM_1;
      WHEN 2 THEN
        DELETE FROM IP_MV_VALID_EM_2;
      WHEN 3 THEN
        DELETE FROM IP_MV_VALID_EM_3;
      WHEN 4 THEN
        DELETE FROM IP_MV_VALID_EM_4;
      WHEN 5 THEN
        DELETE FROM IP_MV_VALID_EM_5;
      WHEN 6 THEN
        DELETE FROM IP_MV_VALID_EM_6;
      WHEN 7 THEN
        DELETE FROM IP_MV_VALID_EM_7;
      WHEN 8 THEN
        DELETE FROM IP_MV_VALID_EM_8;
      WHEN 9 THEN
        DELETE FROM IP_MV_VALID_EM_9;
      END CASE;
    WHEN 'WM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        DELETE FROM IP_MV_VALID_WM_0;
      WHEN 1 THEN
        DELETE FROM IP_MV_VALID_WM_1;
      WHEN 2 THEN
        DELETE FROM IP_MV_VALID_WM_2;
      WHEN 3 THEN
        DELETE FROM IP_MV_VALID_WM_3;
      WHEN 4 THEN
        DELETE FROM IP_MV_VALID_WM_4;
      WHEN 5 THEN
        DELETE FROM IP_MV_VALID_WM_5;
      WHEN 6 THEN
        DELETE FROM IP_MV_VALID_WM_6;
      WHEN 7 THEN
        DELETE FROM IP_MV_VALID_WM_7;
      WHEN 8 THEN
        DELETE FROM IP_MV_VALID_WM_8;
      WHEN 9 THEN
        DELETE FROM IP_MV_VALID_WM_9;
      END CASE;
    WHEN 'GM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        DELETE FROM IP_MV_VALID_GM_0;
      WHEN 1 THEN
        DELETE FROM IP_MV_VALID_GM_1;
      WHEN 2 THEN
        DELETE FROM IP_MV_VALID_GM_2;
      WHEN 3 THEN
        DELETE FROM IP_MV_VALID_GM_3;
      WHEN 4 THEN
        DELETE FROM IP_MV_VALID_GM_4;
      WHEN 5 THEN
        DELETE FROM IP_MV_VALID_GM_5;
      WHEN 6 THEN
        DELETE FROM IP_MV_VALID_GM_6;
      WHEN 7 THEN
        DELETE FROM IP_MV_VALID_GM_7;
      WHEN 8 THEN
        DELETE FROM IP_MV_VALID_GM_8;
      WHEN 9 THEN
        DELETE FROM IP_MV_VALID_GM_9;
      END CASE;
    WHEN 'HM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        DELETE FROM IP_MV_VALID_HM_0;
      WHEN 1 THEN
        DELETE FROM IP_MV_VALID_HM_1;
      WHEN 2 THEN
        DELETE FROM IP_MV_VALID_HM_2;
      WHEN 3 THEN
        DELETE FROM IP_MV_VALID_HM_3;
      WHEN 4 THEN
        DELETE FROM IP_MV_VALID_HM_4;
      WHEN 5 THEN
        DELETE FROM IP_MV_VALID_HM_5;
      WHEN 6 THEN
        DELETE FROM IP_MV_VALID_HM_6;
      WHEN 7 THEN
        DELETE FROM IP_MV_VALID_HM_7;
      WHEN 8 THEN
        DELETE FROM IP_MV_VALID_HM_8;
      WHEN 9 THEN
        DELETE FROM IP_MV_VALID_HM_9;
      END CASE;
    END CASE;
  END SEND_DATA_XX;

  PROCEDURE SEND_DATA_XX_ALL AS
  TABLENUMBER NUMBER;
  BEGIN
    FOR TABLENAME IN (select 'EM' as name from dual union select 'GM' as name from dual union select 'WM' from dual union select 'HM' from dual)
    LOOP
      FOR TABLENUMBER IN 0..9
      LOOP
        SEND_DATA_XX(TABLENAME.name,TABLENUMBER);
      END LOOP;
    END LOOP;
  END SEND_DATA_XX_ALL;

  PROCEDURE VALID_MAXDIGIT(TABLENAME VARCHAR2, TABLENUMBER NUMBER, TARGETME TargetMeterRecordType) AS
  BEGIN
    IF TABLENAME = 'EM' AND CNF_VAL_MAXDIGIT_EM_VALUE = 0 THEN
      RETURN;
    ELSIF TABLENAME = 'WM' AND CNF_VAL_MAXDIGIT_WM_VALUE = 0 THEN
      RETURN;
    ELSIF TABLENAME = 'GM' AND CNF_VAL_MAXDIGIT_GM_VALUE = 0 THEN
      RETURN;
    ELSIF TABLENAME = 'HM' AND CNF_VAL_MAXDIGIT_HM_VALUE = 0 THEN
      RETURN;
    END IF;

    CASE TABLENAME
    WHEN 'EM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        UPDATE IP_MV_VALID_EM_0 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_EM_VALUE AND MV_VALID=0;
      WHEN 1 THEN
        UPDATE IP_MV_VALID_EM_1 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_EM_VALUE AND MV_VALID=0;
      WHEN 2 THEN
        UPDATE IP_MV_VALID_EM_2 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_EM_VALUE AND MV_VALID=0;
      WHEN 3 THEN
        UPDATE IP_MV_VALID_EM_3 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_EM_VALUE AND MV_VALID=0;
      WHEN 4 THEN
        UPDATE IP_MV_VALID_EM_4 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_EM_VALUE AND MV_VALID=0;
      WHEN 5 THEN
        UPDATE IP_MV_VALID_EM_5 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_EM_VALUE AND MV_VALID=0;
      WHEN 6 THEN
        UPDATE IP_MV_VALID_EM_6 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_EM_VALUE AND MV_VALID=0;
      WHEN 7 THEN
        UPDATE IP_MV_VALID_EM_7 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_EM_VALUE AND MV_VALID=0;
      WHEN 8 THEN
        UPDATE IP_MV_VALID_EM_8 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_EM_VALUE AND MV_VALID=0;
      WHEN 9 THEN
        UPDATE IP_MV_VALID_EM_9 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_EM_VALUE AND MV_VALID=0;
      END CASE;
    WHEN 'WM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        UPDATE IP_MV_VALID_WM_0 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_WM_VALUE AND MV_VALID=0;
      WHEN 1 THEN
        UPDATE IP_MV_VALID_WM_1 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_WM_VALUE AND MV_VALID=0;
      WHEN 2 THEN
        UPDATE IP_MV_VALID_WM_2 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_WM_VALUE AND MV_VALID=0;
      WHEN 3 THEN
        UPDATE IP_MV_VALID_WM_3 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_WM_VALUE AND MV_VALID=0;
      WHEN 4 THEN
        UPDATE IP_MV_VALID_WM_4 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_WM_VALUE AND MV_VALID=0;
      WHEN 5 THEN
        UPDATE IP_MV_VALID_WM_5 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_WM_VALUE AND MV_VALID=0;
      WHEN 6 THEN
        UPDATE IP_MV_VALID_WM_6 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_WM_VALUE AND MV_VALID=0;
      WHEN 7 THEN
        UPDATE IP_MV_VALID_WM_7 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_WM_VALUE AND MV_VALID=0;
      WHEN 8 THEN
        UPDATE IP_MV_VALID_WM_8 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_WM_VALUE AND MV_VALID=0;
      WHEN 9 THEN
        UPDATE IP_MV_VALID_WM_9 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_WM_VALUE AND MV_VALID=0;
      END CASE;
    WHEN 'GM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        UPDATE IP_MV_VALID_GM_0 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_GM_VALUE AND MV_VALID=0;
      WHEN 1 THEN
        UPDATE IP_MV_VALID_GM_1 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_GM_VALUE AND MV_VALID=0;
      WHEN 2 THEN
        UPDATE IP_MV_VALID_GM_2 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_GM_VALUE AND MV_VALID=0;
      WHEN 3 THEN
        UPDATE IP_MV_VALID_GM_3 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_GM_VALUE AND MV_VALID=0;
      WHEN 4 THEN
        UPDATE IP_MV_VALID_GM_4 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_GM_VALUE AND MV_VALID=0;
      WHEN 5 THEN
        UPDATE IP_MV_VALID_GM_5 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_GM_VALUE AND MV_VALID=0;
      WHEN 6 THEN
        UPDATE IP_MV_VALID_GM_6 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_GM_VALUE AND MV_VALID=0;
      WHEN 7 THEN
        UPDATE IP_MV_VALID_GM_7 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_GM_VALUE AND MV_VALID=0;
      WHEN 8 THEN
        UPDATE IP_MV_VALID_GM_8 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_GM_VALUE AND MV_VALID=0;
      WHEN 9 THEN
        UPDATE IP_MV_VALID_GM_9 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_GM_VALUE AND MV_VALID=0;
      END CASE;
    WHEN 'HM' THEN
      CASE TABLENUMBER
      WHEN 0 THEN
        UPDATE IP_MV_VALID_HM_0 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_HM_VALUE AND MV_VALID=0;
      WHEN 1 THEN
        UPDATE IP_MV_VALID_HM_1 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_HM_VALUE AND MV_VALID=0;
      WHEN 2 THEN
        UPDATE IP_MV_VALID_HM_2 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_HM_VALUE AND MV_VALID=0;
      WHEN 3 THEN
        UPDATE IP_MV_VALID_HM_3 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_HM_VALUE AND MV_VALID=0;
      WHEN 4 THEN
        UPDATE IP_MV_VALID_HM_4 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_HM_VALUE AND MV_VALID=0;
      WHEN 5 THEN
        UPDATE IP_MV_VALID_HM_5 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_HM_VALUE AND MV_VALID=0;
      WHEN 6 THEN
        UPDATE IP_MV_VALID_HM_6 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_HM_VALUE AND MV_VALID=0;
      WHEN 7 THEN
        UPDATE IP_MV_VALID_HM_7 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_HM_VALUE AND MV_VALID=0;
      WHEN 8 THEN
        UPDATE IP_MV_VALID_HM_8 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_HM_VALUE AND MV_VALID=0;
      WHEN 9 THEN
        UPDATE IP_MV_VALID_HM_9 SET MV_VALID=3008 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
        AND CHANNEL=TARGETME.CHANNEL AND MV_VALUE > CNF_VAL_MAXDIGIT_HM_VALUE AND MV_VALID=0;
      END CASE;
    END CASE;
  END VALID_MAXDIGIT;

  PROCEDURE VALID_NEGATIVE(TABLENAME VARCHAR2, TABLENUMBER NUMBER, TARGETME TargetMeterRecordType) AS
    STMT_SELECT1 VARCHAR2(2000);
    STMT_SELECT2 VARCHAR2(2000);
    CUR_TARGETMV TargetMeterValueType;
    CUR_OLDMV TargetMeterValueType;
    TARGETMV IP_MV_VALID_EM_0%ROWTYPE;
    BOOL_FIRST BOOLEAN;
    TEMP_MV_VALUE FLOAT;
    OLD_MVTYPE CHAR(1);
    OLD_YYYYMMDDHHMMSS VARCHAR2(14);
    OLD_MV_VALUE FLOAT;
    OLD_MV_VALID NUMBER;
  BEGIN
    STMT_SELECT1 := 'SELECT * FROM IP_MV_VALID_'||TABLENAME||'_'||TABLENUMBER||' WHERE MDEV_ID=:1 AND CHANNEL=:2 ORDER BY MDEV_ID, YYYYMMDDHHMMSS FOR UPDATE';

    BOOL_FIRST := TRUE;
    TEMP_MV_VALUE := 0;

    OPEN CUR_TARGETMV FOR STMT_SELECT1 USING TARGETME.MDEV_ID,TARGETME.CHANNEL;
    LOOP
      FETCH CUR_TARGETMV INTO TARGETMV;
      EXIT WHEN CUR_TARGETMV%NOTFOUND;

      IF BOOL_FIRST THEN
        STMT_SELECT2 := 'SELECT * FROM ('||CHR(10);
        STMT_SELECT2 := STMT_SELECT2||'SELECT ''B'' AS MVTYPE,YYYYMMDDHHMMSS,MV_VALUE,MV_VALID '||CHR(10);
        STMT_SELECT2 := STMT_SELECT2||'FROM IP_MV_DATA_'||TABLENAME||' '||CHR(10);
        STMT_SELECT2 := STMT_SELECT2||'WHERE MDEV_ID=:1 AND MDEV_TYPE=:2 AND CHANNEL=:3 AND YYYYMMDDHHMMSS >= :4 '||CHR(10);
        STMT_SELECT2 := STMT_SELECT2||'  AND YYYYMMDDHHMMSS < :5 AND MV_VALID=1001 '||CHR(10);
        STMT_SELECT2 := STMT_SELECT2||'ORDER BY YYYYMMDDHHMMSS DESC '||CHR(10);
        STMT_SELECT2 := STMT_SELECT2||') WHERE ROWNUM<2'||CHR(10);

        OPEN CUR_OLDMV FOR STMT_SELECT2 USING TARGETME.MDEV_ID,TARGETME.MDEV_TYPE,TARGETME.CHANNEL,TO_CHAR(TO_DATE(TARGETME.MINDATE,'yyyymmddhh24miss')-CNF_OLDMV_VDAYS,'yyyymmddhh24miss'), TARGETME.MINDATE;
        LOOP
          FETCH CUR_OLDMV INTO OLD_MVTYPE,OLD_YYYYMMDDHHMMSS,OLD_MV_VALUE,OLD_MV_VALID;
          EXIT WHEN CUR_OLDMV%NOTFOUND;

          IF OLD_MVTYPE='B' THEN
            TEMP_MV_VALUE := OLD_MV_VALUE;
          END IF;
        END LOOP;
        CLOSE CUR_OLDMV;

        IF TEMP_MV_VALUE = 0 AND TARGETMV.MV_VALUE != 0 THEN
          TEMP_MV_VALUE := TARGETMV.MV_VALUE;
        END IF;

        BOOL_FIRST := FALSE;
      END IF;

      CASE TABLENAME
      WHEN 'EM' THEN
        IF TEMP_MV_VALUE != 0 AND TEMP_MV_VALUE > TARGETMV.MV_VALUE AND TARGETMV.MV_VALID = 0 THEN
          CASE TABLENUMBER
          WHEN 0 THEN
            UPDATE IP_MV_VALID_EM_0 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 1 THEN
            UPDATE IP_MV_VALID_EM_1 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 2 THEN
            UPDATE IP_MV_VALID_EM_2 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 3 THEN
            UPDATE IP_MV_VALID_EM_3 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 4 THEN
            UPDATE IP_MV_VALID_EM_4 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 5 THEN
            UPDATE IP_MV_VALID_EM_5 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 6 THEN
            UPDATE IP_MV_VALID_EM_6 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 7 THEN
            UPDATE IP_MV_VALID_EM_7 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 8 THEN
            UPDATE IP_MV_VALID_EM_8 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 9 THEN
            UPDATE IP_MV_VALID_EM_9 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          END CASE;
        ELSIF TARGETMV.MV_VALID = 0 OR TARGETMV.MV_VALID = 1001 THEN
          TEMP_MV_VALUE := TARGETMV.MV_VALUE;
        END IF;
      WHEN 'WM' THEN
        IF TEMP_MV_VALUE != 0 AND TEMP_MV_VALUE > TARGETMV.MV_VALUE AND TARGETMV.MV_VALID = 0 THEN
          CASE TABLENUMBER
          WHEN 0 THEN
            UPDATE IP_MV_VALID_WM_0 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 1 THEN
            UPDATE IP_MV_VALID_WM_1 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 2 THEN
            UPDATE IP_MV_VALID_WM_2 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 3 THEN
            UPDATE IP_MV_VALID_WM_3 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 4 THEN
            UPDATE IP_MV_VALID_WM_4 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 5 THEN
            UPDATE IP_MV_VALID_WM_5 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 6 THEN
            UPDATE IP_MV_VALID_WM_6 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 7 THEN
            UPDATE IP_MV_VALID_WM_7 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 8 THEN
            UPDATE IP_MV_VALID_WM_8 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 9 THEN
            UPDATE IP_MV_VALID_WM_9 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          END CASE;
        ELSIF TARGETMV.MV_VALID = 0 OR TARGETMV.MV_VALID = 1001 THEN
          TEMP_MV_VALUE := TARGETMV.MV_VALUE;
        END IF;
      WHEN 'GM' THEN
        IF TEMP_MV_VALUE != 0 AND TEMP_MV_VALUE > TARGETMV.MV_VALUE AND TARGETMV.MV_VALID = 0 THEN
          CASE TABLENUMBER
          WHEN 0 THEN
            UPDATE IP_MV_VALID_GM_0 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 1 THEN
            UPDATE IP_MV_VALID_GM_1 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 2 THEN
            UPDATE IP_MV_VALID_GM_2 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 3 THEN
            UPDATE IP_MV_VALID_GM_3 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 4 THEN
            UPDATE IP_MV_VALID_GM_4 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 5 THEN
            UPDATE IP_MV_VALID_GM_5 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 6 THEN
            UPDATE IP_MV_VALID_GM_6 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 7 THEN
            UPDATE IP_MV_VALID_GM_7 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 8 THEN
            UPDATE IP_MV_VALID_GM_8 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 9 THEN
            UPDATE IP_MV_VALID_GM_9 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          END CASE;
        ELSIF TARGETMV.MV_VALID = 0 OR TARGETMV.MV_VALID = 1001 THEN
          TEMP_MV_VALUE := TARGETMV.MV_VALUE;
        END IF;
      WHEN 'HM' THEN
        IF TEMP_MV_VALUE != 0 AND TEMP_MV_VALUE > TARGETMV.MV_VALUE AND TARGETMV.MV_VALID = 0 THEN
          CASE TABLENUMBER
          WHEN 0 THEN
            UPDATE IP_MV_VALID_HM_0 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 1 THEN
            UPDATE IP_MV_VALID_HM_1 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 2 THEN
            UPDATE IP_MV_VALID_HM_2 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 3 THEN
            UPDATE IP_MV_VALID_HM_3 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 4 THEN
            UPDATE IP_MV_VALID_HM_4 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 5 THEN
            UPDATE IP_MV_VALID_HM_5 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 6 THEN
            UPDATE IP_MV_VALID_HM_6 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 7 THEN
            UPDATE IP_MV_VALID_HM_7 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 8 THEN
            UPDATE IP_MV_VALID_HM_8 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 9 THEN
            UPDATE IP_MV_VALID_HM_9 SET MV_VALID=3007 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          END CASE;
        ELSIF TARGETMV.MV_VALID = 0 OR TARGETMV.MV_VALID = 1001 THEN
          TEMP_MV_VALUE := TARGETMV.MV_VALUE;
        END IF;
      END CASE;
	END LOOP;
    CLOSE CUR_TARGETMV;
  END VALID_NEGATIVE;

  PROCEDURE VALID_KAIFASTATUSFLAG(TABLENAME VARCHAR2, TABLENUMBER NUMBER, TARGETME TargetMeterRecordType) AS
    STMT_SELECT1 VARCHAR2(2000);
    STMT_SELECT2 VARCHAR2(2000);
    CUR_TARGETMV TargetMeterValueType;
    CUR_OLDMV TargetMeterValueType;
    TARGETMV IP_MV_VALID_EM_0%ROWTYPE;
    TEMP_MV_STATUS NUMBER;
    TEMP_MV_VALID NUMBER;
  BEGIN
    STMT_SELECT1 := 'SELECT * FROM IP_MV_VALID_'||TABLENAME||'_'||TABLENUMBER||' WHERE MDEV_ID=:1 AND CHANNEL=:2 ORDER BY MDEV_ID, YYYYMMDDHHMMSS FOR UPDATE';

    OPEN CUR_TARGETMV FOR STMT_SELECT1 USING TARGETME.MDEV_ID,TARGETME.CHANNEL;
    LOOP
      FETCH CUR_TARGETMV INTO TARGETMV;
      EXIT WHEN CUR_TARGETMV%NOTFOUND;

      TEMP_MV_VALID := 0;
      IF BITAND(TARGETMV.MV_STATUS, 1) = 1 THEN
        TEMP_MV_VALID := 3005; -- Critical Error, Device failure
      ELSIF BITAND(TARGETMV.MV_STATUS, 2) = 2 THEN
        TEMP_MV_VALID := 3002; -- Clock Error, Clock invalid
      ELSIF BITAND(TARGETMV.MV_STATUS, 128) = 128 THEN
        TEMP_MV_VALID := 2001; -- Np Read - Power Failurer, Power down
      ELSIF BITAND(TARGETMV.MV_STATUS, 32) = 32 THEN
        TEMP_MV_VALID := 3003; -- Time Reset Occured, Clock adjusted
      ELSIF BITAND(TARGETMV.MV_STATUS, 4) = 4 THEN
        TEMP_MV_VALID := 3001; -- Missing, Data not valid
      ELSIF BITAND(TARGETMV.MV_STATUS, 8) = 8 THEN
        TEMP_MV_VALID := 1002; -- DST - Indicate that daylight saving is in effect, Daylight saving
      END IF;

      IF TEMP_MV_VALID != 0 THEN
        CASE TABLENAME
        WHEN 'EM' THEN
          CASE TABLENUMBER
          WHEN 0 THEN
            UPDATE IP_MV_VALID_EM_0 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 1 THEN
            UPDATE IP_MV_VALID_EM_1 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 2 THEN
            UPDATE IP_MV_VALID_EM_2 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 3 THEN
            UPDATE IP_MV_VALID_EM_3 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 4 THEN
            UPDATE IP_MV_VALID_EM_4 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 5 THEN
            UPDATE IP_MV_VALID_EM_5 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 6 THEN
            UPDATE IP_MV_VALID_EM_6 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 7 THEN
            UPDATE IP_MV_VALID_EM_7 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 8 THEN
            UPDATE IP_MV_VALID_EM_8 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 9 THEN
            UPDATE IP_MV_VALID_EM_9 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          END CASE;
        WHEN 'WM' THEN
          CASE TABLENUMBER
          WHEN 0 THEN
            UPDATE IP_MV_VALID_WM_0 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 1 THEN
            UPDATE IP_MV_VALID_WM_1 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 2 THEN
            UPDATE IP_MV_VALID_WM_2 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 3 THEN
            UPDATE IP_MV_VALID_WM_3 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 4 THEN
            UPDATE IP_MV_VALID_WM_4 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 5 THEN
            UPDATE IP_MV_VALID_WM_5 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 6 THEN
            UPDATE IP_MV_VALID_WM_6 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 7 THEN
            UPDATE IP_MV_VALID_WM_7 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 8 THEN
            UPDATE IP_MV_VALID_WM_8 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 9 THEN
            UPDATE IP_MV_VALID_WM_9 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          END CASE;
        WHEN 'GM' THEN
          CASE TABLENUMBER
          WHEN 0 THEN
            UPDATE IP_MV_VALID_GM_0 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 1 THEN
            UPDATE IP_MV_VALID_GM_1 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 2 THEN
            UPDATE IP_MV_VALID_GM_2 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 3 THEN
            UPDATE IP_MV_VALID_GM_3 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 4 THEN
            UPDATE IP_MV_VALID_GM_4 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 5 THEN
            UPDATE IP_MV_VALID_GM_5 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 6 THEN
            UPDATE IP_MV_VALID_GM_6 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 7 THEN
           UPDATE IP_MV_VALID_GM_7 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 8 THEN
            UPDATE IP_MV_VALID_GM_8 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 9 THEN
            UPDATE IP_MV_VALID_GM_9 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          END CASE;
        WHEN 'HM' THEN
          CASE TABLENUMBER
          WHEN 0 THEN
            UPDATE IP_MV_VALID_HM_0 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 1 THEN
            UPDATE IP_MV_VALID_HM_1 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 2 THEN
            UPDATE IP_MV_VALID_HM_2 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 3 THEN
            UPDATE IP_MV_VALID_HM_3 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 4 THEN
            UPDATE IP_MV_VALID_HM_4 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 5 THEN
            UPDATE IP_MV_VALID_HM_5 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 6 THEN
            UPDATE IP_MV_VALID_HM_6 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 7 THEN
            UPDATE IP_MV_VALID_HM_7 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 8 THEN
            UPDATE IP_MV_VALID_HM_8 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          WHEN 9 THEN
            UPDATE IP_MV_VALID_HM_9 SET MV_VALID=TEMP_MV_VALID WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE
            AND CHANNEL=TARGETME.CHANNEL AND YYYYMMDDHHMMSS=TARGETMV.YYYYMMDDHHMMSS AND MV_VALID=0;
          END CASE;
        END CASE;
      END IF;
    END LOOP;
  END VALID_KAIFASTATUSFLAG;

  PROCEDURE VALIDCHECK(TABLENAME VARCHAR2, TABLENUMBER NUMBER) IS
    CUR_TARGETMETER TargetMeterValueType;
    STMT_UPDATE1 VARCHAR2(2000);
    STMT_UPDATE2 VARCHAR2(2000);
    STMT_TARGETMETER VARCHAR2(2000);
    TARGETME TargetMeterRecordType;
  BEGIN
    GET_OPTIONS;

    STMT_TARGETMETER := 'SELECT MDEV_ID,MDEV_TYPE,CHANNEL,MAX(YYYYMMDDHHMMSS) AS MAXDATE,MIN(YYYYMMDDHHMMSS) AS MINDATE'||CHR(10)||
	'FROM IP_MV_VALID_'||TABLENAME||'_'||TABLENUMBER||CHR(10)||
	'WHERE MV_VALID=:1 '||CHR(10)||
	'GROUP BY MDEV_ID,MDEV_TYPE,CHANNEL';
	
	OPEN CUR_TARGETMETER FOR STMT_TARGETMETER USING '0';
	LOOP
	  FETCH CUR_TARGETMETER INTO TARGETME;
      EXIT WHEN CUR_TARGETMETER%NOTFOUND;

      IF CNF_VALIDATION_SUPPORT = 'FALSE' THEN
        GOTO end_validation;
      END IF;

      VALID_KAIFASTATUSFLAG(TABLENAME, TABLENUMBER, TARGETME);

      IF CNF_VAL_MAXDIGIT_MV='TRUE' THEN
        VALID_MAXDIGIT(TABLENAME, TABLENUMBER, TARGETME);
      END IF;

      IF CNF_VAL_NEGATIVE_MV='TRUE' THEN
        VALID_NEGATIVE(TABLENAME, TABLENUMBER, TARGETME);
      END IF;

      <<end_validation>>

      CASE TABLENAME
      WHEN 'EM' THEN
        CASE TABLENUMBER
        WHEN 0 THEN
          UPDATE IP_MV_VALID_EM_0 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 1 THEN
          UPDATE IP_MV_VALID_EM_1 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 2 THEN
          UPDATE IP_MV_VALID_EM_2 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 3 THEN
          UPDATE IP_MV_VALID_EM_3 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 4 THEN
          UPDATE IP_MV_VALID_EM_4 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 5 THEN
          UPDATE IP_MV_VALID_EM_5 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 6 THEN
          UPDATE IP_MV_VALID_EM_6 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 7 THEN
          UPDATE IP_MV_VALID_EM_7 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 8 THEN
          UPDATE IP_MV_VALID_EM_8 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 9 THEN
          UPDATE IP_MV_VALID_EM_9 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        END CASE;
      WHEN 'WM' THEN
        CASE TABLENUMBER
        WHEN 0 THEN
          UPDATE IP_MV_VALID_WM_0 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 1 THEN
          UPDATE IP_MV_VALID_WM_1 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 2 THEN
          UPDATE IP_MV_VALID_WM_2 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 3 THEN
          UPDATE IP_MV_VALID_WM_3 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 4 THEN
          UPDATE IP_MV_VALID_WM_4 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 5 THEN
          UPDATE IP_MV_VALID_WM_5 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 6 THEN
          UPDATE IP_MV_VALID_WM_6 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 7 THEN
          UPDATE IP_MV_VALID_WM_7 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 8 THEN
          UPDATE IP_MV_VALID_WM_8 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 9 THEN
          UPDATE IP_MV_VALID_WM_9 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        END CASE;
      WHEN 'GM' THEN
        CASE TABLENUMBER
        WHEN 0 THEN
          UPDATE IP_MV_VALID_GM_0 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 1 THEN
          UPDATE IP_MV_VALID_GM_1 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 2 THEN
          UPDATE IP_MV_VALID_GM_2 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 3 THEN
          UPDATE IP_MV_VALID_GM_3 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 4 THEN
          UPDATE IP_MV_VALID_GM_4 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 5 THEN
          UPDATE IP_MV_VALID_GM_5 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 6 THEN
          UPDATE IP_MV_VALID_GM_6 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 7 THEN
          UPDATE IP_MV_VALID_GM_7 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 8 THEN
          UPDATE IP_MV_VALID_GM_8 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 9 THEN
          UPDATE IP_MV_VALID_GM_9 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        END CASE;
      WHEN 'HM' THEN
        CASE TABLENUMBER
        WHEN 0 THEN
          UPDATE IP_MV_VALID_HM_0 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 1 THEN
          UPDATE IP_MV_VALID_HM_1 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 2 THEN
          UPDATE IP_MV_VALID_HM_2 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 3 THEN
          UPDATE IP_MV_VALID_HM_3 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 4 THEN
          UPDATE IP_MV_VALID_HM_4 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 5 THEN
          UPDATE IP_MV_VALID_HM_5 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 6 THEN
          UPDATE IP_MV_VALID_HM_6 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 7 THEN
          UPDATE IP_MV_VALID_HM_7 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 8 THEN
          UPDATE IP_MV_VALID_HM_8 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        WHEN 9 THEN
          UPDATE IP_MV_VALID_HM_9 SET MV_VALID=1001 WHERE MDEV_ID=TARGETME.MDEV_ID AND MDEV_TYPE=TARGETME.MDEV_TYPE AND CHANNEL=TARGETME.CHANNEL AND MV_VALID=0;
        END CASE;
      END CASE;

    END LOOP;
    CLOSE CUR_TARGETMETER;

    SEND_DATA_XX(TABLENAME,TABLENUMBER);
    COMMIT;
  END VALIDCHECK;

  PROCEDURE VALIDCHECKALL AS
    TABLENUMBER NUMBER;
  BEGIN
    FOR TABLENAME IN (select 'EM' as name from dual union select 'GM' as name from dual union select 'WM' from dual union select 'HM' from dual)
    LOOP
      FOR TABLENUMBER IN 0..9
      LOOP
        VALIDCHECK(TABLENAME.name, TABLENUMBER);
      END LOOP;
    END LOOP;
  END VALIDCHECKALL;

  PROCEDURE PROCESS_MV AS
  BEGIN
    GET_OPTIONS;
    MOVETEMPMVALL;
    VALIDCHECKALL;
    SEND_DATA_XX_ALL;
  END PROCESS_MV;

  PROCEDURE PROCESS_MV_SCHEDULE(TABLENAME VARCHAR2, TABLENUMBER NUMBER) AS
  BEGIN
    GET_OPTIONS;
    MOVETEMPMV(TABLENAME,TABLENUMBER);
    VALIDCHECK(TABLENAME,TABLENUMBER);
    SEND_DATA_XX(TABLENAME,TABLENUMBER);
  END PROCESS_MV_SCHEDULE;

END AIMIR_VALIDATION;
/
