DROP TABLE LP_EM;
DROP TABLE LP_WM;
DROP TABLE LP_GM;
DROP TABLE LP_HM;

DECLARE
  STMT_DDL VARCHAR2(4000);
BEGIN
  FOR TABLENAME IN (select 'EM' as name from dual union select 'GM' as name from dual union select 'WM' from dual union select 'HM' from dual)
  LOOP
    STMT_DDL := 'CREATE TABLE LP_'||TABLENAME.name||' '||CHR(10)||
                '( '||CHR(10)||
                '  CONTRACT_ID      NUMBER(10),    '||CHR(10)||
                '  DEVICE_ID        VARCHAR2(20),  '||CHR(10)||
                '  DEVICE_TYPE      VARCHAR2(255), '||CHR(10)||
                '  ENDDEVICE_ID     NUMBER(10),    '||CHR(10)||
                '  FULL_LOCATION    VARCHAR2(255), '||CHR(10)||
                '  HH               VARCHAR2(2),   '||CHR(10)||
                '  LOCATION_ID      NUMBER(10),    '||CHR(10)||
                '  METER_ID         NUMBER(10),    '||CHR(10)||
                '  METERINGTYPE     NUMBER(10),    '||CHR(10)||
                '  MODEM_ID         NUMBER(10),    '||CHR(10)||
                '  SEND_RESULT      VARCHAR2(255), '||CHR(10)||
                '  SUPPLIER_ID      NUMBER(10),    '||CHR(10)||
                '  YYYYMMDD         VARCHAR2(8),   '||CHR(10)||
                '  YYYYMMDDHH       VARCHAR2(10) NOT NULL, '||CHR(10)||
                '  DST              NUMBER(38)   DEFAULT 0 NOT NULL, '||CHR(10)||
                '  MDEV_ID          VARCHAR2(20) NOT NULL, '||CHR(10)||
                '  MDEV_ID_LAST     VARCHAR2(1 CHAR) GENERATED ALWAYS AS (SUBSTR(MDEV_ID,LENGTH(MDEV_ID),1)) VIRTUAL, '||CHR(10)||
                '  MDEV_TYPE        VARCHAR2(20) NOT NULL, '||CHR(10)||
                '  CHANNEL          NUMBER(10)   NOT NULL, '||CHR(10)||
                '  WRITEDATE        VARCHAR2(14), '||CHR(10)||
                '  VALUE            NUMBER(19,4), '||CHR(10)||
                '  VALUE_CNT        NUMBER(10), '||CHR(10);
    FOR IDX IN 0..59
    LOOP
      STMT_DDL := STMT_DDL || '  VALUE_'||TRIM(TO_CHAR(IDX,'00'))||' NUMBER(19,4), '||CHR(10);
    END LOOP;
    STMT_DDL := STMT_DDL ||
                            '  CONSTRAINT LP_'||TABLENAME.name||'_ENDDEVICE_ID_FK FOREIGN KEY(ENDDEVICE_ID) REFERENCES ENDDEVICE(ID), '||CHR(10)||
                            '  CONSTRAINT LP_'||TABLENAME.name||'_LOCATION_ID_FK FOREIGN KEY(LOCATION_ID) REFERENCES LOCATION(ID), '||CHR(10)||
                            '  CONSTRAINT LP_'||TABLENAME.name||'_SUPPLIER_ID_FK FOREIGN KEY(SUPPLIER_ID) REFERENCES SUPPLIER(ID), '||CHR(10)||
                            '  CONSTRAINT LP_'||TABLENAME.name||'_MODEM_ID_FK FOREIGN KEY(MODEM_ID) REFERENCES MODEM(ID), '||CHR(10)||
                            '  CONSTRAINT LP_'||TABLENAME.name||'_METER_ID_FK FOREIGN KEY(METER_ID) REFERENCES METER(ID), '||CHR(10)||
                            '  CONSTRAINT LP_'||TABLENAME.name||'_CONTRACT_ID_FK FOREIGN KEY(CONTRACT_ID) REFERENCES CONTRACT(ID) '||CHR(10)||
                            ') '||CHR(10)||
                            'PARTITION BY RANGE(YYYYMMDDHH) '||CHR(10)||
                            'SUBPARTITION BY LIST (MDEV_ID_LAST) '||CHR(10)||
                            '   SUBPARTITION TEMPLATE '||CHR(10)||
                            '   ( '||CHR(10)||
                            '      SUBPARTITION ID0 VALUES (''0''), '||CHR(10)||
                            '      SUBPARTITION ID1 VALUES (''1''), '||CHR(10)||
                            '      SUBPARTITION ID2 VALUES (''2''), '||CHR(10)||
                            '      SUBPARTITION ID3 VALUES (''3''), '||CHR(10)||
                            '      SUBPARTITION ID4 VALUES (''4''), '||CHR(10)||
                            '      SUBPARTITION ID5 VALUES (''5''), '||CHR(10)||
                            '      SUBPARTITION ID6 VALUES (''6''), '||CHR(10)||
                            '      SUBPARTITION ID7 VALUES (''7''), '||CHR(10)||
                            '      SUBPARTITION ID8 VALUES (''8''), '||CHR(10)||
                            '      SUBPARTITION ID9 VALUES (''9''), '||CHR(10)||
                            '      SUBPARTITION IDA VALUES (DEFAULT) '||CHR(10)||
                            '   ) '||CHR(10)||
                            '( '||CHR(10)||
                            '  PARTITION PART'||TO_CHAR(CURRENT_DATE,'YYYYMMDD')||' VALUES LESS THAN ('''||TO_CHAR(CURRENT_DATE+1,'YYYYMMDD')||'00'') '||CHR(10)||
                            ') TABLESPACE AIMIRPART';
    EXECUTE IMMEDIATE STMT_DDL;
  END LOOP;

  FOR TABLENAME IN (select 'EM' as name from dual union select 'GM' as name from dual union select 'WM' from dual union select 'HM' from dual)
  LOOP
    STMT_DDL := 'CREATE UNIQUE INDEX LP_'||TABLENAME.name||'_PK ON LP_'||TABLENAME.name||'(YYYYMMDDHH,MDEV_ID,CHANNEL,MDEV_ID_LAST,DST,MDEV_TYPE) LOCAL TABLESPACE AIMIRPART';
    EXECUTE IMMEDIATE STMT_DDL;
    STMT_DDL := 'ALTER TABLE LP_'||TABLENAME.name||' ADD CONSTRAINT LP_'||TABLENAME.name||'_PK PRIMARY KEY(YYYYMMDDHH,MDEV_ID,CHANNEL,MDEV_ID_LAST,DST,MDEV_TYPE) USING INDEX';
    EXECUTE IMMEDIATE STMT_DDL;
    STMT_DDL := 'CREATE INDEX LP_'||TABLENAME.name||'_IDX_02_WRITEDATE_DESC ON LP_'||TABLENAME.name||'(WRITEDATE DESC) TABLESPACE AIMIRPART';
    EXECUTE IMMEDIATE STMT_DDL;
  END LOOP;

END;
/

alter table lp_em add MDEV_ID_LAST     VARCHAR2(1 CHAR) GENERATED ALWAYS AS (SUBSTR(MDEV_ID,LENGTH(MDEV_ID),1)) VIRTUAL;
alter table lp_wm add MDEV_ID_LAST     VARCHAR2(1 CHAR) GENERATED ALWAYS AS (SUBSTR(MDEV_ID,LENGTH(MDEV_ID),1)) VIRTUAL;
alter table lp_hm add MDEV_ID_LAST     VARCHAR2(1 CHAR) GENERATED ALWAYS AS (SUBSTR(MDEV_ID,LENGTH(MDEV_ID),1)) VIRTUAL;
alter table lp_gm add MDEV_ID_LAST     VARCHAR2(1 CHAR) GENERATED ALWAYS AS (SUBSTR(MDEV_ID,LENGTH(MDEV_ID),1)) VIRTUAL;

alter table lp_vc add MDEV_ID_LAST     VARCHAR2(1 CHAR) GENERATED ALWAYS AS (SUBSTR(MDEV_ID,LENGTH(MDEV_ID),1)) VIRTUAL;
alter table lp_tm add MDEV_ID_LAST     VARCHAR2(1 CHAR) GENERATED ALWAYS AS (SUBSTR(MDEV_ID,LENGTH(MDEV_ID),1)) VIRTUAL;
alter table lp_spm add MDEV_ID_LAST    VARCHAR2(1 CHAR) GENERATED ALWAYS AS (SUBSTR(MDEV_ID,LENGTH(MDEV_ID),1)) VIRTUAL;
alter table lp_hum add MDEV_ID_LAST    VARCHAR2(1 CHAR) GENERATED ALWAYS AS (SUBSTR(MDEV_ID,LENGTH(MDEV_ID),1)) VIRTUAL;


INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) values ('LP_EM','DAILY','ALTER TABLE LP_EM ADD PARTITION PART{STARTDATE} VALUES LESS THAN(''{NEXTPERIODDATE}00'') update indexes','dd',10,0,1);
INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) values ('LP_WM','DAILY','ALTER TABLE LP_WM ADD PARTITION PART{STARTDATE} VALUES LESS THAN(''{NEXTPERIODDATE}00'') update indexes','dd',10,0,1);
INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) values ('LP_GM','DAILY','ALTER TABLE LP_GM ADD PARTITION PART{STARTDATE} VALUES LESS THAN(''{NEXTPERIODDATE}00'') update indexes','dd',10,0,1);
INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) values ('LP_HM','DAILY','ALTER TABLE LP_HM ADD PARTITION PART{STARTDATE} VALUES LESS THAN(''{NEXTPERIODDATE}00'') update indexes','dd',10,0,1);

INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) values ('LP_EM DROP','DAILY','ALTER TABLE LP_EM DROP PARTITION PART{STARTDATE} update indexes','dd',15,-105,1);
INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) values ('LP_WM DROP','DAILY','ALTER TABLE LP_WM DROP PARTITION PART{STARTDATE} update indexes','dd',15,-105,1);
INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) values ('LP_GM DROP','DAILY','ALTER TABLE LP_GM DROP PARTITION PART{STARTDATE} update indexes','dd',15,-105,1);
INSERT INTO PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) values ('LP_HM DROP','DAILY','ALTER TABLE LP_HM DROP PARTITION PART{STARTDATE} update indexes','dd',15,-105,1);

commit work;


-- 파티션 자동 생성
execute partiton_package.run_all;

-- 파티션 수동 생성
DECLARE
  STMT_DDL varchar2(4000);
  TEMPDATE DATE;
BEGIN
  TEMPDATE := TO_DATE('20170701','YYYYMMDD');
  FOR IDX IN 1..30
  LOOP
    FOR TABLENAME IN (select 'EM' as name from dual union select 'GM' as name from dual union select 'WM' from dual union select 'HM' from dual)
    LOOP
      STMT_DDL := 'ALTER TABLE LP_'||TABLENAME.name||' ADD PARTITION PART'||TO_CHAR(TEMPDATE,'YYYYMMDD') ||' VALUES LESS THAN('''||TO_CHAR(TEMPDATE+1,'YYYYMMDD') ||'00'') update indexes';
      dbms_output.put_line(STMT_DDL);
      EXECUTE IMMEDIATE STMT_DDL;
    END LOOP;
    TEMPDATE := TEMPDATE + 1;
  END LOOP;
END;
/
