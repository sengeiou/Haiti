CREATE OR REPLACE PACKAGE AIMIR_IP AS
  PROCEDURE INSERT_MV_TEMP(
    P_TABLENAME      VARCHAR2,
    P_YYYYMMDDHHMMSS VARCHAR2,
    P_CHANNEL        NUMBER,
    P_MDEV_ID        VARCHAR2,
    P_MDEV_TYPE      VARCHAR2,
    P_MVALUE NUMBER
  );

  PROCEDURE INSERT_MV_VALID(
    P_TABLENAME          VARCHAR2,
    P_YYYYMMDDHHMMSS     VARCHAR2,
    P_CHANNEL            NUMBER,
    P_MDEV_ID            VARCHAR2,
    P_MDEV_TYPE          VARCHAR2,
    P_DEVICE_TYPE        VARCHAR2,
    P_DEVICE_ID          VARCHAR2,
    P_MVALUE             NUMBER,
    P_MVSTATUS           NUMBER,
    P_LOCATION_ID        VARCHAR2,
    P_CAPTURE_DATE_METER NUMBER,
    P_CAPTURE_DATE_DCU   NUMBER,
    P_LPCREATEDTIME      TIMESTAMP WITH TIME ZONE
  );

  PROCEDURE INSERT_MV_DATA(
    P_TABLENAME       VARCHAR2,
    P_YYYYMMDDHHMMSS  VARCHAR2,
    P_CHANNEL         NUMBER,
    P_MDEV_ID         VARCHAR2,
    P_MDEV_TYPE       VARCHAR2,
    P_LOCATION_ID     NUMBER,
    P_MV_VALUE        FLOAT,
    P_MV_VALID        NUMBER,
    P_MV_STATUS       NUMBER,
    P_CAP_DATE_METER  NUMBER,
    P_CAP_DATE_DCU    NUMBER,
    P_CAP_DEVICE_TYPE VARCHAR2,
    P_CAP_DEVICE_ID   VARCHAR2,
    P_LPCREATEDTIME   TIMESTAMP WITH TIME ZONE
  );

  FUNCTION GET_MV_FROM_TEMP(
    P_TABLENAME      VARCHAR2,
    P_YYYYMMDDHHMMSS VARCHAR2,
    P_CHANNEL        NUMBER,
    P_MDEV_ID        VARCHAR2,
    P_MDEV_TYPE      VARCHAR2
  ) RETURN NUMBER;

  PROCEDURE UPDATECAPDATE_VALID(
    P_TABLENAME      VARCHAR2,
    P_YYYYMMDDHHMMSS VARCHAR2,
    P_CHANNEL        NUMBER,
    P_MDEV_ID        VARCHAR2,
    P_MDEV_TYPE      VARCHAR2,
    P_DEVICE_TYPE    VARCHAR2,
    P_DEVICE_ID      VARCHAR2,
    P_MVALUE         NUMBER
  );

  PROCEDURE UPDATESTATUS_VALID(
    P_TABLENAME      VARCHAR2,
    P_YYYYMMDDHHMMSS VARCHAR2,
    P_CHANNEL        NUMBER,
    P_MDEV_ID        VARCHAR2,
    P_MDEV_TYPE      VARCHAR2,
    P_DEVICE_TYPE    VARCHAR2,
    P_DEVICE_ID      VARCHAR2,
    P_MVALUE         NUMBER
  );

  FUNCTION GET_MV_CHANNEL(
    P_MDEV_ID VARCHAR2,
    P_CHANNEL NUMBER
  ) RETURN NUMBER;
END AIMIR_IP;
/

CREATE OR REPLACE PACKAGE BODY AIMIR_IP AS

  PROCEDURE INSERT_MV_TEMP(
    P_TABLENAME VARCHAR2,
    P_YYYYMMDDHHMMSS VARCHAR2,
    P_CHANNEL NUMBER,
    P_MDEV_ID VARCHAR2,
    P_MDEV_TYPE VARCHAR2,
    P_MVALUE NUMBER
  ) AS
  BEGIN
    if P_TABLENAME = 'EM' then
      insert into IP_MV_TEMP_EM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,MV_VALUE)
      select P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_MVALUE from dual
      where not exists (
        select 1 from IP_MV_DATA_EM
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and CHANNEL=P_CHANNEL
          and MDEV_ID=P_MDEV_ID AND MDEV_TYPE=P_MDEV_TYPE
      );
    elsif P_TABLENAME = 'WM' then
      insert into IP_MV_TEMP_WM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,MV_VALUE)
      select P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_MVALUE from dual
      where not exists (
        select 1 from IP_MV_DATA_WM
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and CHANNEL=P_CHANNEL
          and MDEV_ID=P_MDEV_ID AND MDEV_TYPE=P_MDEV_TYPE
      );
    elsif P_TABLENAME = 'GM' then
      insert into IP_MV_TEMP_GM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,MV_VALUE)
      select P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_MVALUE from dual
      where not exists (
        select 1 from IP_MV_DATA_GM
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and CHANNEL=P_CHANNEL
          and MDEV_ID=P_MDEV_ID AND MDEV_TYPE=P_MDEV_TYPE
      );
    elsif P_TABLENAME = 'HM' then
      insert into IP_MV_TEMP_HM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,MV_VALUE)
      select P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_MVALUE from dual
      where not exists (
        select 1 from IP_MV_DATA_HM
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and CHANNEL=P_CHANNEL
          and MDEV_ID=P_MDEV_ID AND MDEV_TYPE=P_MDEV_TYPE
      );
    end if;
    exception
      when others then
        null;
  END INSERT_MV_TEMP;

  PROCEDURE INSERT_MV_VALID(
    P_TABLENAME VARCHAR2,
    P_YYYYMMDDHHMMSS VARCHAR2,
    P_CHANNEL NUMBER,
    P_MDEV_ID VARCHAR2,
    P_MDEV_TYPE VARCHAR2,
    P_DEVICE_TYPE VARCHAR2,
    P_DEVICE_ID VARCHAR2,
    P_MVALUE NUMBER,
    P_MVSTATUS NUMBER,
    P_LOCATION_ID VARCHAR2,
    P_CAPTURE_DATE_METER NUMBER,
    P_CAPTURE_DATE_DCU NUMBER,
    P_LPCREATEDTIME TIMESTAMP WITH TIME ZONE
  ) AS
  BEGIN
    if P_TABLENAME = 'EM' then
      insert into IP_MV_VALID_EM(TABLENUMBER,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,MV_VALUE,MV_STATUS,LOCATION_ID,CAP_DEVICE_TYPE,CAP_DEVICE_ID,CAP_DATE_METER,CAP_DATE_DCU,LPCREATEDTIME)
      select substr(P_MDEV_ID,length(P_MDEV_ID)),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_MVALUE,P_MVSTATUS,P_LOCATION_ID,P_DEVICE_TYPE,P_DEVICE_ID,P_CAPTURE_DATE_METER,P_CAPTURE_DATE_DCU,P_LPCREATEDTIME from dual;
    elsif P_TABLENAME = 'WM' then
      insert into IP_MV_VALID_WM(TABLENUMBER,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,MV_VALUE,MV_STATUS,LOCATION_ID,CAP_DEVICE_TYPE,CAP_DEVICE_ID,CAP_DATE_METER,CAP_DATE_DCU,LPCREATEDTIME)
      select substr(P_MDEV_ID,length(P_MDEV_ID)),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_MVALUE,P_MVSTATUS,P_LOCATION_ID,P_DEVICE_TYPE,P_DEVICE_ID,P_CAPTURE_DATE_METER,P_CAPTURE_DATE_DCU,P_LPCREATEDTIME from dual;
    elsif P_TABLENAME = 'GM' then
      insert into IP_MV_VALID_GM(TABLENUMBER,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,MV_VALUE,MV_STATUS,LOCATION_ID,CAP_DEVICE_TYPE,CAP_DEVICE_ID,CAP_DATE_METER,CAP_DATE_DCU,LPCREATEDTIME)
      select substr(P_MDEV_ID,length(P_MDEV_ID)),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_MVALUE,P_MVSTATUS,P_LOCATION_ID,P_DEVICE_TYPE,P_DEVICE_ID,P_CAPTURE_DATE_METER,P_CAPTURE_DATE_DCU,P_LPCREATEDTIME from dual;
    elsif P_TABLENAME = 'HM' then
      insert into IP_MV_VALID_HM(TABLENUMBER,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,MV_VALUE,MV_STATUS,LOCATION_ID,CAP_DEVICE_TYPE,CAP_DEVICE_ID,CAP_DATE_METER,CAP_DATE_DCU,LPCREATEDTIME)
      select substr(P_MDEV_ID,length(P_MDEV_ID)),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_MVALUE,P_MVSTATUS,P_LOCATION_ID,P_DEVICE_TYPE,P_DEVICE_ID,P_CAPTURE_DATE_METER,P_CAPTURE_DATE_DCU,P_LPCREATEDTIME from dual;
    end if;
    exception
      when others then
        null;
  END INSERT_MV_VALID;

  PROCEDURE INSERT_MV_DATA(
    P_TABLENAME VARCHAR2,
    P_YYYYMMDDHHMMSS IN VARCHAR2,
    P_CHANNEL IN NUMBER,
    P_MDEV_ID IN VARCHAR2,
    P_MDEV_TYPE IN VARCHAR2,
    P_LOCATION_ID IN NUMBER,
    P_MV_VALUE IN FLOAT,
    P_MV_VALID IN NUMBER,
    P_MV_STATUS IN NUMBER,
    P_CAP_DATE_METER IN NUMBER,
    P_CAP_DATE_DCU IN NUMBER,
    P_CAP_DEVICE_TYPE IN VARCHAR2,
    P_CAP_DEVICE_ID IN VARCHAR2,
    P_LPCREATEDTIME IN TIMESTAMP WITH TIME ZONE
  ) AS
  BEGIN
    BEGIN
      CASE P_TABLENAME
      WHEN 'EM' THEN
        INSERT INTO IP_MV_DATA_EM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'WM' THEN
        INSERT INTO IP_MV_DATA_WM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'GM' THEN
        INSERT INTO IP_MV_DATA_GM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'HM' THEN
        INSERT INTO IP_MV_DATA_HM(YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      END CASE;

      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
        NULL;
    END;

    BEGIN
      CASE P_TABLENAME
      WHEN 'EM' THEN
        INSERT INTO IP_MV_DELIVERY_EM(YYYYMMDD,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(SUBSTR(P_YYYYMMDDHHMMSS,0,8),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'WM' THEN
        INSERT INTO IP_MV_DELIVERY_WM(YYYYMMDD,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(SUBSTR(P_YYYYMMDDHHMMSS,0,8),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'GM' THEN
        INSERT INTO IP_MV_DELIVERY_GM(YYYYMMDD,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(SUBSTR(P_YYYYMMDDHHMMSS,0,8),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      WHEN 'HM' THEN
        INSERT INTO IP_MV_DELIVERY_HM(YYYYMMDD,YYYYMMDDHHMMSS,CHANNEL,MDEV_ID,MDEV_TYPE,LOCATION_ID,MV_VALUE,MV_VALID,MV_STATUS,CAP_DATE_METER,CAP_DATE_DCU,CAP_DEVICE_TYPE,CAP_DEVICE_ID,LPCREATEDTIME)
        VALUES(SUBSTR(P_YYYYMMDDHHMMSS,0,8),P_YYYYMMDDHHMMSS,P_CHANNEL,P_MDEV_ID,P_MDEV_TYPE,P_LOCATION_ID,P_MV_VALUE,P_MV_VALID,P_MV_STATUS,P_CAP_DATE_METER,P_CAP_DATE_DCU,P_CAP_DEVICE_TYPE,P_CAP_DEVICE_ID,P_LPCREATEDTIME);
      END CASE;

      EXCEPTION
      WHEN DUP_VAL_ON_INDEX THEN
        NULL;
    END;
  END INSERT_MV_DATA;

  FUNCTION GET_MV_FROM_TEMP(
    P_TABLENAME VARCHAR2,
    P_YYYYMMDDHHMMSS IN VARCHAR2,
    P_CHANNEL IN NUMBER,
    P_MDEV_ID IN VARCHAR2,
    P_MDEV_TYPE IN VARCHAR2
  ) RETURN NUMBER IS
    RETVAL NUMBER;
  BEGIN
    RETVAL := null;

    if P_TABLENAME = 'EM' then
      select MV_VALUE into RETVAL from IP_MV_TEMP_EM
      where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID and CHANNEL=P_CHANNEL;
    elsif P_TABLENAME = 'WM' then
      select MV_VALUE into RETVAL from IP_MV_TEMP_WM
      where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID and CHANNEL=P_CHANNEL;
    elsif P_TABLENAME = 'WM' then
      select MV_VALUE into RETVAL from IP_MV_TEMP_GM
      where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID and CHANNEL=P_CHANNEL;
    elsif P_TABLENAME = 'WM' then
      select MV_VALUE into RETVAL from IP_MV_TEMP_HM
      where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID and CHANNEL=P_CHANNEL;
    end if;

    RETURN RETVAL;

    exception
      when NO_DATA_FOUND then
        RETURN null;
  END GET_MV_FROM_TEMP;

  PROCEDURE UPDATESTATUS_VALID(
    P_TABLENAME VARCHAR2,
    P_YYYYMMDDHHMMSS VARCHAR2,
    P_CHANNEL NUMBER,
    P_MDEV_ID VARCHAR2,
    P_MDEV_TYPE VARCHAR2,
    P_DEVICE_TYPE VARCHAR2,
    P_DEVICE_ID VARCHAR2,
    P_MVALUE NUMBER
  ) AS
  BEGIN
    if P_TABLENAME = 'EM' then
      update IP_MV_VALID_EM set MV_STATUS=P_MVALUE
      where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
    elsif P_TABLENAME = 'WM' then
      update IP_MV_VALID_WM set MV_STATUS=P_MVALUE
      where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
    elsif P_TABLENAME = 'GM' then
      update IP_MV_VALID_GM set MV_STATUS=P_MVALUE
      where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
    elsif P_TABLENAME = 'HM' then
      update IP_MV_VALID_HM set MV_STATUS=P_MVALUE
      where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
    end if;

    exception
      when others then
        null;
  END UPDATESTATUS_VALID;

  PROCEDURE UPDATECAPDATE_VALID(
    P_TABLENAME VARCHAR2,
    P_YYYYMMDDHHMMSS VARCHAR2,
    P_CHANNEL NUMBER,
    P_MDEV_ID VARCHAR2,
    P_MDEV_TYPE VARCHAR2,
    P_DEVICE_TYPE VARCHAR2,
    P_DEVICE_ID VARCHAR2,
    P_MVALUE NUMBER
  ) AS
  BEGIN
    if P_TABLENAME = 'EM' then
      if P_CHANNEL=998 then
        update IP_MV_VALID_EM set CAP_DATE_METER=P_MVALUE
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
      elsif P_CHANNEL=999 then
        update IP_MV_VALID_EM set CAP_DATE_DCU=P_MVALUE
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
      end if;
    elsif P_TABLENAME = 'WM' then
      if P_CHANNEL=998 then
        update IP_MV_VALID_WM set CAP_DATE_METER=P_MVALUE
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
      elsif P_CHANNEL=999 then
        update IP_MV_VALID_WM set CAP_DATE_DCU=P_MVALUE
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
      end if;
    elsif P_TABLENAME = 'GM' then
      if P_CHANNEL=998 then
        update IP_MV_VALID_GM set CAP_DATE_METER=P_MVALUE
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
      elsif P_CHANNEL=999 then
        update IP_MV_VALID_GM set CAP_DATE_DCU=P_MVALUE
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
      end if;
    elsif P_TABLENAME = 'HM' then
      if P_CHANNEL=998 then
        update IP_MV_VALID_HM set CAP_DATE_METER=P_MVALUE
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
      elsif P_CHANNEL=999 then
        update IP_MV_VALID_HM set CAP_DATE_DCU=P_MVALUE
        where YYYYMMDDHHMMSS=P_YYYYMMDDHHMMSS and MDEV_TYPE=P_MDEV_TYPE and MDEV_ID=P_MDEV_ID;
      end if;
    end if;

    exception
      when others then
        null;
  END UPDATECAPDATE_VALID;

  FUNCTION GET_MV_CHANNEL(
    P_MDEV_ID VARCHAR2,
    P_CHANNEL NUMBER
  ) RETURN NUMBER IS
    RETVAL NUMBER;
  BEGIN
    RETVAL := null;
    RETURN RETVAL;

    exception
      when NO_DATA_FOUND then
        RETURN null;
  END GET_MV_CHANNEL;

END AIMIR_IP;
/
