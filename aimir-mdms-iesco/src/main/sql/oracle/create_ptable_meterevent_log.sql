DROP TABLE METEREVENT_LOG;


DECLARE
  STMT_DDL VARCHAR2(2000);
BEGIN
  STMT_DDL := 'CREATE TABLE METEREVENT_LOG '||
              '( '||
              '  ACTIVATOR_ID   VARCHAR2(100) NOT NULL, '||
              '  METEREVENT_ID  VARCHAR2(100) NOT NULL, '||
              '  OPEN_TIME      VARCHAR2(14)  NOT NULL, '||
              '  ACTIVATOR_TYPE VARCHAR2(255) NOT NULL, '||
              '  INTEGRATED     NUMBER(38)    DEFAULT 0, '||
              '  MESSAGE        VARCHAR2(255), '||
              '  SUPPLIER_ID    NUMBER(10), '||
              '  WRITETIME      VARCHAR2(14)  NOT NULL, '||
              '  YYYYMMDD       VARCHAR2(8)   NOT NULL '||
              ') '||
              'PARTITION BY RANGE (OPEN_TIME) '||
              '( '||
              '  PARTITION PART'||TO_CHAR(CURRENT_DATE,'YYYYMMDD')||' VALUES LESS THAN ('''||TO_CHAR(CURRENT_DATE+1,'YYYYMMDD')||'000000'') '||CHR(10)||
              ') TABLESPACE AIMIRPART';

  EXECUTE IMMEDIATE STMT_DDL;

  STMT_DDL := 'CREATE UNIQUE INDEX METEREVENT_LOG_PK ON METEREVENT_LOG(METEREVENT_ID, ACTIVATOR_ID, YYYYMMDD, OPEN_TIME) LOCAL TABLESPACE AIMIRPART';
  EXECUTE IMMEDIATE STMT_DDL;
  STMT_DDL := 'ALTER TABLE METEREVENT_LOG ADD CONSTRAINT METEREVENT_LOG_PK PRIMARY KEY(METEREVENT_ID, ACTIVATOR_ID, YYYYMMDD, OPEN_TIME) USING INDEX';
  EXECUTE IMMEDIATE STMT_DDL;

END;
/

Insert into PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) 
values ('METEREVENT_LOG','DAILY','ALTER TABLE METEREVENT_LOG ADD PARTITION PART{STARTDATE} VALUES LESS THAN(''{NEXTPERIODDATE}'') update indexes','dd',10,0,1);
Insert into PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) 
values ('METEREVENT_LOG DROP','DAILY','ALTER TABLE METEREVENT_LOG DROP PARTITION PART{STARTDATE} update indexes','dd',15,-365,1);

commit work;