DECLARE
  STMT_DDL VARCHAR2(2000);
BEGIN
  STMT_DDL := 'CREATE TABLE IP_EV_TEMP '||
              '( '||
              '  EVTYPE VARCHAR2(1) NOT NULL,'||
              '  ACTIVATOR_ID VARCHAR2(100) NOT NULL, '||
              '  METEREVENT_ID VARCHAR2(100) NOT NULL, '||
              '  EVENTOBIS_ID VARCHAR2(100) NOT NULL, '||
              '  OPEN_TIME VARCHAR2(14) NOT NULL, '||
              '  ACTIVATOR_TYPE VARCHAR2(255) NOT NULL, '||
              '  INTEGRATED NUMBER DEFAULT 0, '||
              '  MESSAGE VARCHAR2(255), '||
              '  SUPPLIER_ID NUMBER, '||
              '  LOCATION_ID NUMBER, '||
              '  WRITETIME VARCHAR2(14) NOT NULL, '||
              '  YYYYMMDD VARCHAR2(8) NOT NULL '||
              ') '||
              'PARTITION BY RANGE (OPEN_TIME) '||
              '( '||
              '  PARTITION PART'||to_char(CURRENT_DATE,'YYYYMMDD')||' VALUES LESS THAN ('''||to_char(CURRENT_DATE,'YYYYMMDD')||'235959'') '||
              ') TABLESPACE AIMIRPART';
  EXECUTE IMMEDIATE STMT_DDL;
  STMT_DDL := 'CREATE UNIQUE INDEX IP_EV_TEMP_PK ON IP_EV_TEMP (EVTYPE, OPEN_TIME, ACTIVATOR_ID, METEREVENT_ID) LOCAL TABLESPACE AIMIRPART';
  EXECUTE IMMEDIATE STMT_DDL;
  STMT_DDL := 'ALTER TABLE IP_EV_TEMP ADD CONSTRAINT IP_EV_TEMP_PK PRIMARY KEY(EVTYPE, OPEN_TIME, ACTIVATOR_ID, METEREVENT_ID) USING INDEX';
  EXECUTE IMMEDIATE STMT_DDL;

  STMT_DDL := 'CREATE TABLE IP_EV_DELIVERY '||
              '( '||
              '  EVTYPE VARCHAR2(1) NOT NULL,'||
              '  ACTIVATOR_ID VARCHAR2(100) NOT NULL, '||
              '  METEREVENT_ID VARCHAR2(100) NOT NULL, '||
              '  EVENTOBIS_ID VARCHAR2(100) NOT NULL, '||
              '  OPEN_TIME VARCHAR2(14) NOT NULL, '||
              '  ACTIVATOR_TYPE VARCHAR2(255) NOT NULL, '||
              '  INTEGRATED NUMBER DEFAULT 0, '||
              '  MESSAGE VARCHAR2(255), '||
              '  SUPPLIER_ID NUMBER, '||
              '  LOCATION_ID NUMBER, '||
              '  WRITETIME VARCHAR2(14) NOT NULL, '||
              '  YYYYMMDD VARCHAR2(8) NOT NULL, '||
              '  CONSTRAINT IP_EV_DELIVERY_PK PRIMARY KEY (EVTYPE, OPEN_TIME, ACTIVATOR_ID, METEREVENT_ID) '||
              ') TABLESPACE AIMIRINT';
  EXECUTE IMMEDIATE STMT_DDL;

  STMT_DDL := 'CREATE TABLE IP_EV_OUTBOUND '||
              '( '||
              '  ROWIDFORDELETE ROWID, '||
              '  BATCH_ID     NUMBER, '||
              '  EVTYPE VARCHAR2(1) NOT NULL,'||
              '  ACTIVATOR_ID VARCHAR2(100) NOT NULL, '||
              '  METEREVENT_ID VARCHAR2(100) NOT NULL, '||
              '  EVENTOBIS_ID VARCHAR2(100) NOT NULL, '||
              '  OPEN_TIME VARCHAR2(14) NOT NULL, '||
              '  ACTIVATOR_TYPE VARCHAR2(255) NOT NULL, '||
              '  INTEGRATED NUMBER DEFAULT 0, '||
              '  MESSAGE VARCHAR2(255), '||
              '  SUPPLIER_ID NUMBER, '||
              '  LOCATION_NAME VARCHAR2(30), '||
              '  WRITETIME VARCHAR2(14) NOT NULL, '||
              '  YYYYMMDD VARCHAR2(8) NOT NULL '||
              ') TABLESPACE AIMIRINT';
  EXECUTE IMMEDIATE STMT_DDL;

  STMT_DDL := 'CREATE INDEX IP_EV_OUTBOUND_IDX_01 ON IP_EV_OUTBOUND(BATCH_ID, ROWIDFORDELETE) TABLESPACE AIMIRINT';
  EXECUTE IMMEDIATE STMT_DDL;

  END;
/


CREATE SEQUENCE IP_EV_BATCH_SEQUENCE;

CREATE TABLE IP_EV_BATCHES
(
  BATCH_ID     NUMBER,
  BATCH_STATUS NUMBER,
  CREATE_DATE DATE DEFAULT CURRENT_DATE,
  DELIVERED_DATE DATE,
  NUMBER_OF_ROWS NUMBER,
  CONSTRAINT IP_EV_BATCHES_PK PRIMARY KEY (BATCH_ID)
) TABLESPACE AIMIRINT;


CREATE TABLE IP_EV_OPTION
(
  CODETYPE VARCHAR2(2),
  ATTRIBUTENAME  VARCHAR2(30),
  ATTRIBUTEVALUE VARCHAR2(60),
  CONSTRAINT IP_EV_OPTION_PK PRIMARY KEY (CODETYPE,ATTRIBUTENAME)
) TABLESPACE AIMIRINT;

Insert into IP_EV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_BATCH_MAXSIZE','5000');
Insert into IP_EV_OPTION (CODETYPE,ATTRIBUTENAME,ATTRIBUTEVALUE) values ('OP','CNF_DELIVERY','TRUE');


Insert into PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) 
values ('IP_EV_TEMP','DAILY','ALTER TABLE IP_EV_TEMP ADD PARTITION PART{STARTDATE} VALUES LESS THAN(''{LASTSECOND}'') update indexes','dd',10,0,1);
Insert into PARTITION_CONTROL (ID,PARTITIONINGINTERVAL,SQLCOMMAND,STARTDATETRUNCATE,ITERATIONS,STARTDATEOFFSET,ACTIVE) 
values ('IP_EV_TEMP DROP','DAILY','ALTER TABLE IP_EV_TEMP DROP PARTITION PART{STARTDATE} update indexes','dd',15,-365,1);
