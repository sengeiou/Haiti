
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.aimir.mars.integration.multispeak.client;

import org.multispeak.version_4.ArrayOfCDStateChange;
import org.multispeak.version_4.ArrayOfErrorObject;
import org.multispeak.version_4.ArrayOfMeterReading1;
import org.multispeak.version_4.ErrorObject;

import java.util.logging.Logger;

/**
 * This class was generated by Apache CXF 2.7.16
 * 2015-07-22T20:55:12.942+09:00
 * Generated source version: 2.7.16
 * 
 */

@javax.jws.WebService(
                      serviceName = "CB_Server",
                      portName = "CB_ServerSoap",
                      targetNamespace = "http://www.multispeak.org/Version_4.1_Release",
                      wsdlLocation = "http://localhost:8089/services/CB_Server.wsdl",
                      endpointInterface = "CBServerSoap")
                      
public class CBServerSoapImpl implements CBServerSoap {

    private static final Logger LOG = Logger.getLogger(CBServerSoapImpl.class.getName());

    /* (non-Javadoc)
     * @see CBServerSoap#cdStatesChangedNotification(ArrayOfCDStateChange  stateChanges ,)java.lang.String  transactionID ,)MultiSpeakMsgHeader  multiSpeakMsgHeader )*
     */
    public ArrayOfErrorObject CDStatesChangedNotification(ArrayOfCDStateChange stateChanges,java.lang.String transactionID) { 
        LOG.info("Executing operation cdStatesChangedNotification");
        System.out.println(stateChanges);
        System.out.println(transactionID);
        try {
            ArrayOfErrorObject _return = new ArrayOfErrorObject();
            java.util.List<ErrorObject> _returnErrorObject = new java.util.ArrayList<ErrorObject>();
            ErrorObject _returnErrorObjectVal1 = new ErrorObject();
            _returnErrorObjectVal1.setObjectID("ObjectID-2033134399");
            _returnErrorObjectVal1.setErrorString("ErrorString-827121334");
            _returnErrorObjectVal1.setNounType("NounType-835691915");
            _returnErrorObjectVal1.setEventTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2015-07-22T20:55:12.973+09:00"));
            _returnErrorObject.add(_returnErrorObjectVal1);
            _return.getErrorObject().addAll(_returnErrorObject);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }


    @Override
    public ArrayOfErrorObject GetReadingsByMeterIDAsync(
            ArrayOfMeterReading1 meterReads, String transactionID) {
        LOG.info("Executing operation getReadingsByMeterIDAsync");
        System.out.println(meterReads);
        System.out.println(transactionID);
        try {
            ArrayOfErrorObject _return = new ArrayOfErrorObject();
            java.util.List<ErrorObject> _returnErrorObject = new java.util.ArrayList<ErrorObject>();
            ErrorObject _returnErrorObjectVal1 = new ErrorObject();
            _returnErrorObjectVal1.setObjectID("ObjectID1942239771");
            _returnErrorObjectVal1.setErrorString("ErrorString615152209");
            _returnErrorObjectVal1.setNounType("NounType-213913525");
            _returnErrorObjectVal1.setEventTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2015-07-22T20:55:13.020+09:00"));
            _returnErrorObject.add(_returnErrorObjectVal1);
            _return.getErrorObject().addAll(_returnErrorObject);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
