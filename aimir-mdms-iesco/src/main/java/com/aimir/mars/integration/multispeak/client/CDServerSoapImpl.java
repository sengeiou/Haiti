
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.aimir.mars.integration.multispeak.client;

import java.util.logging.Logger;

import org.multispeak.version_4.ArrayOfCDState;
import org.multispeak.version_4.ArrayOfConnectDisconnectEvent;
import org.multispeak.version_4.ArrayOfErrorObject;
import org.multispeak.version_4.ErrorObject;
import org.multispeak.version_4.ExpirationTime;

/**
 * This class was generated by Apache CXF 2.7.16
 * 2015-07-23T09:42:34.530+09:00
 * Generated source version: 2.7.16
 * 
 */

@javax.jws.WebService(
                      serviceName = "$service.ServiceName",
                      targetNamespace = "$service.Namespace",
                      wsdlLocation = "http://localhost:8089/services/CD_Server.wsdl",
                      endpointInterface = "CDServerSoap")
                      
public class CDServerSoapImpl implements CDServerSoap {

    private static final Logger LOG = Logger.getLogger(CDServerSoapImpl.class.getName());

    /* (non-Javadoc)
     * @see CDServerSoap#InitiateConnectDisconnect(ArrayOfConnectDisconnectEvent  cdEvents ,)java.lang.String  responseURL ,)java.lang.String  transactionID ,)ExpirationTime  expTime ,)MultiSpeakMsgHeader  multiSpeakMsgHeader )*
     */
    public ArrayOfErrorObject InitiateConnectDisconnect(ArrayOfConnectDisconnectEvent cdEvents,java.lang.String responseURL,java.lang.String transactionID,ExpirationTime expTime) { 
        LOG.info("Executing operation InitiateConnectDisconnect");
        System.out.println(cdEvents);
        System.out.println(responseURL);
        System.out.println(transactionID);
        System.out.println(expTime);
        try {
            ArrayOfErrorObject _return = new ArrayOfErrorObject();
            java.util.List<ErrorObject> _returnErrorObject = new java.util.ArrayList<ErrorObject>();
            ErrorObject _returnErrorObjectVal1 = new ErrorObject();
            _returnErrorObjectVal1.setObjectID("ObjectID-943812954");
            _returnErrorObjectVal1.setErrorString("ErrorString-1143525507");
            _returnErrorObjectVal1.setNounType("NounType763604175");
            _returnErrorObjectVal1.setEventTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2015-07-23T09:42:34.718+09:00"));
            _returnErrorObject.add(_returnErrorObjectVal1);
            _return.getErrorObject().addAll(_returnErrorObject);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see CDServerSoap#initiateCDStateRequest(ArrayOfCDState  states ,)java.lang.String  responseURL ,)java.lang.String  transactionID ,)ExpirationTime  expTime ,)MultiSpeakMsgHeader  multiSpeakMsgHeader )*
     */
    public ArrayOfErrorObject initiateCDStateRequest(ArrayOfCDState states,java.lang.String responseURL,java.lang.String transactionID,ExpirationTime expTime) { 
        LOG.info("Executing operation initiateCDStateRequest");
        System.out.println(states);
        System.out.println(responseURL);
        System.out.println(transactionID);
        System.out.println(expTime);
        try {
            ArrayOfErrorObject _return = new ArrayOfErrorObject();
            java.util.List<ErrorObject> _returnErrorObject = new java.util.ArrayList<ErrorObject>();
            ErrorObject _returnErrorObjectVal1 = new ErrorObject();
            _returnErrorObjectVal1.setObjectID("ObjectID1657533885");
            _returnErrorObjectVal1.setErrorString("ErrorString-606020936");
            _returnErrorObjectVal1.setNounType("NounType667601622");
            _returnErrorObjectVal1.setEventTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2015-07-23T09:42:34.733+09:00"));
            _returnErrorObject.add(_returnErrorObjectVal1);
            _return.getErrorObject().addAll(_returnErrorObject);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
