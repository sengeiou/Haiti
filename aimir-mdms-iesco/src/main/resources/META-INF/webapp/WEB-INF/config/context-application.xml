<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
 	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
 	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
 	xmlns:cxf="http://cxf.apache.org/core"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
    xmlns:jaxrs="http://cxf.apache.org/jaxrs"
    xmlns:sec="http://cxf.apache.org/configuration/security"
    xmlns:http="http://cxf.apache.org/transports/http/configuration"
    xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
 xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/beans/spring-util-4.1.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://cxf.apache.org/jaxws
        http://cxf.apache.org/schemas/jaxws.xsd
        http://cxf.apache.org/jaxrs
        http://cxf.apache.org/schemas/jaxrs.xsd
        http://cxf.apache.org/configuration/security
        http://cxf.apache.org/schemas/configuration/security.xsd
        http://cxf.apache.org/transports/http/configuration
        http://cxf.apache.org/schemas/configuration/http-conf.xsd
        http://cxf.apache.org/transports/http-jetty/configuration
        http://cxf.apache.org/schemas/configuration/http-jetty.xsd">
    
    <!--  <bean class="com.aimir.mdms.config.MvcConfigurationPostProcessor" />-->
    
    <!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />
	
	<!-- Load CXF modules from cxf.jar -->
    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	
	<!-- aop -->	
	<tx:annotation-driven proxy-target-class="true"/>
		
    <!-- Scans the classpath of this application for @Components to deploy as beans -->	
	<context:component-scan base-package="com.aimir.mars.integration,com.aimir.mars.util" >
		<context:exclude-filter type="regex"
			expression="com.aimir.mars.integration.metercontrol.*" />
		<context:exclude-filter type="regex"
			expression="com.aimir.mars.integration.multispeak.*" />
		<context:exclude-filter type="regex"
			expression="com.aimir.mars.integration.service.*" />			
		<context:exclude-filter type="regex"
			expression="com.aimir.mars.util.CmdController" />	
	</context:component-scan>
  	
  	<mvc:view-controller path="/" view-name="redirect:/index"/>
  	
  	<!-- config properties -->  	
  	<context:property-placeholder location="classpath:config/mdms.config.properties"/>
  	
    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="idleConnectionTestPeriodInMinutes" value="5"/>
        <property name="idleMaxAgeInMinutes" value="60"/>
        <property name="maxConnectionsPerPartition" value="5"/>
        <property name="minConnectionsPerPartition" value="2"/>
        <property name="partitionCount" value="3"/>
        <property name="acquireIncrement" value="1"/>
        <property name="statementsCacheSize" value="100"/>
    </bean>
    
    <!-- Annotation Support Hibernate Session Factory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">create-drop</prop>-->
                <!--<prop key="hibernate.hbm2ddl.auto">create</prop>-->
                <!--<prop key="hibernate.hbm2ddl.auto">validate</prop>-->
                <!-- <prop key="hibernate.hbm2ddl.auto">false</prop>-->
                <prop key="hibernate.hbm2ddl.auto">false</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <!--<prop key="hibernate.query.substitutions">Y</prop>-->
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">org.hibernate.cache.EhCacheProvider</prop>
                <!-- Turn batching off for better error messages under PostgreSQL>-->
                <!--prop key="hibernate.jdbc.batch_size">0</prop-->
                <!-- 0:none, 1:read_uncommitted, 2:read_committed, 4:repeatable_read, 8:serializable -->
                <prop key="hibernate.connection.isolation">1</prop>
                <prop key="hibernate.ejb.event.flush">com.aimir.hibernate.PatchedFlushListener</prop>
                <prop key="hibernate.transaction.flush_before_completion">false</prop>
                <prop key="hibernate.transaction.auto_close_session">false</prop>
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.aimir.mars.integration.*</value>
                <value>com.aimir.model.*</value>
            </list>
        </property>
    </bean>
    
    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="defaultTimeout" value="${tx.default.timeout}"/>
    </bean>

    <bean id="sessionContextFactory" class="org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean">
    	<property name="targetBeanName" value="sessionContext" />
    </bean>
	
</beans>