/* ***********************************
 * 	@Copyright : NURITelecom
 * 	@ProjectName : aimir_mdms_moe
 * 	@FileName : PKG_MDM_BATCH_JOB.sql
 * 	@Author : kyunghee.yoon
 * 	@Date : 2018.09.20
 *************************************/ 
create or replace PACKAGE PKG_MDM_BATCH_JOB AS 
	
	PROCEDURE INSERT_BATCH_LP_EM; 	
	PROCEDURE INSERT_BATCH_BILLING_DAY_EM; 
	PROCEDURE INSERT_BATCH_BILLING_MONTH_EM; 	
	PROCEDURE INSERT_BATCH_METEREVENT_LOG;

END PKG_MDM_BATCH_JOB;

create or replace PACKAGE BODY  PKG_MDM_BATCH_JOB AS 
 
	PROCEDURE INSERT_BATCH_LP_EM  
	AS 
		V_SEQ_MDM_BATCH NUMBER :=0; 
		V_BATCH_CNT NUMBER :=0; 
		V_LIMIT NUMBER :=2000; 
		V_START_DATE VARCHAR(14) :=NULL; 
		V_END_DATE VARCHAR(14) :=NULL; 

	BEGIN 	
		-- GET V_START_DATE 
		SELECT TO_CHAR(SYSDATE-1,'YYYYMMDD') || '000000' INTO V_START_DATE FROM DUAL; 
		SELECT TO_CHAR(SYSDATE,'YYYYMMDD') || '235959' INTO V_END_DATE FROM DUAL; 

		-- GET SEQUENCE 
		SELECT SEQ_MDM_BATCH.NEXTVAL INTO V_SEQ_MDM_BATCH FROM DUAL; 

		INSERT INTO MDM_BATCH_LOG (BATCH_ID, BATCH_TYPE, BATCH_CNT) VALUES ( 
			V_SEQ_MDM_BATCH, 'LP_EM', 0 
		); 

		-- UPDATE MDM_LP_EM
		UPDATE MDM_LP_EM SET BATCH_ID = V_SEQ_MDM_BATCH
		WHERE BATCH_ID IS NULL AND INSERT_DATETIME BETWEEN V_START_DATE AND V_END_DATE AND ROWNUM <= V_LIMIT;

		-- SELECT BATCH_CNT 
		SELECT COUNT(*) INTO V_BATCH_CNT FROM MDM_LP_EM WHERE BATCH_ID = V_SEQ_MDM_BATCH;  

		IF V_BATCH_CNT > 0 THEN
			-- INSERT MDM_BATCH_LOG 
			UPDATE MDM_BATCH_LOG SET BATCH_CNT = V_BATCH_CNT WHERE BATCH_ID = V_SEQ_MDM_BATCH;		
		ELSE 
			DELETE FROM MDM_BATCH_LOG WHERE BATCH_ID = V_SEQ_MDM_BATCH;		
		END IF;

	END; 
	
	PROCEDURE INSERT_BATCH_BILLING_DAY_EM  
	AS 
		V_SEQ_MDM_BATCH NUMBER :=0; 
		V_BATCH_CNT NUMBER :=0; 
		V_LIMIT NUMBER :=2000; 
		V_START_DATE VARCHAR(14) :=NULL; 
		V_END_DATE VARCHAR(14) :=NULL; 
	BEGIN 	

		-- GET V_START_DATE 
		SELECT TO_CHAR(SYSDATE-1,'YYYYMMDD') || '000000' INTO V_START_DATE FROM DUAL; 
		SELECT TO_CHAR(SYSDATE,'YYYYMMDD') || '235959' INTO V_END_DATE FROM DUAL; 

		-- GET SEQUENCE 
        SELECT SEQ_MDM_BATCH.NEXTVAL INTO V_SEQ_MDM_BATCH FROM DUAL; 

        INSERT INTO MDM_BATCH_LOG (BATCH_ID, BATCH_TYPE, BATCH_CNT) VALUES (
            V_SEQ_MDM_BATCH, 'BILLING_DAY_EM', 0 
        );
        -- UPDATE MDM_BILLING_DAY_EM
        UPDATE MDM_BILLING_DAY_EM SET BATCH_ID = V_SEQ_MDM_BATCH
        WHERE BATCH_ID IS NULL AND INSERT_DATETIME BETWEEN V_START_DATE AND V_END_DATE AND ROWNUM <= V_LIMIT;

        -- SELECT BATCH_CNT 
        SELECT COUNT(*) INTO V_BATCH_CNT FROM MDM_BILLING_DAY_EM WHERE BATCH_ID = V_SEQ_MDM_BATCH;  

        IF V_BATCH_CNT > 0 THEN
            -- INSERT MDM_BATCH_LOG 
            UPDATE MDM_BATCH_LOG SET BATCH_CNT = V_BATCH_CNT WHERE BATCH_ID = V_SEQ_MDM_BATCH;		
        ELSE 
            DELETE FROM MDM_BATCH_LOG WHERE BATCH_ID = V_SEQ_MDM_BATCH;		
        END IF;

	END;

	PROCEDURE INSERT_BATCH_BILLING_MONTH_EM  
	AS 
		V_SEQ_MDM_BATCH NUMBER :=0; 
		V_BATCH_CNT NUMBER :=0; 
		V_LIMIT NUMBER :=1000; 
		V_START_DATE VARCHAR(14) :=NULL; 
		V_END_DATE VARCHAR(14) :=NULL; 
	BEGIN 	

		-- GET V_START_DATE 
		SELECT TO_CHAR(SYSDATE-1,'YYYYMMDD') || '000000' INTO V_START_DATE FROM DUAL; 
		SELECT TO_CHAR(SYSDATE,'YYYYMMDD') || '235959' INTO V_END_DATE FROM DUAL; 

		-- GET SEQUENCE 
        SELECT SEQ_MDM_BATCH.NEXTVAL INTO V_SEQ_MDM_BATCH FROM DUAL; 

        INSERT INTO MDM_BATCH_LOG (BATCH_ID, BATCH_TYPE, BATCH_CNT) VALUES (
            V_SEQ_MDM_BATCH, 'BILLING_MONTH_EM', 0 
        );
        -- UPDATE MDM_BILLING_MONTH_EM
        UPDATE MDM_BILLING_MONTH_EM SET BATCH_ID = V_SEQ_MDM_BATCH
        WHERE BATCH_ID IS NULL AND INSERT_DATETIME BETWEEN V_START_DATE AND V_END_DATE AND ROWNUM <= V_LIMIT;

        -- SELECT BATCH_CNT 
        SELECT COUNT(*) INTO V_BATCH_CNT FROM MDM_BILLING_MONTH_EM WHERE BATCH_ID = V_SEQ_MDM_BATCH;  

        IF V_BATCH_CNT > 0 THEN
            -- INSERT MDM_BATCH_LOG 
            UPDATE MDM_BATCH_LOG SET BATCH_CNT = V_BATCH_CNT WHERE BATCH_ID = V_SEQ_MDM_BATCH;		
        ELSE 
            DELETE FROM MDM_BATCH_LOG WHERE BATCH_ID = V_SEQ_MDM_BATCH;		
        END IF;

	END;

	PROCEDURE INSERT_BATCH_METEREVENT_LOG AS 
		V_SEQ_MDM_BATCH NUMBER :=0; 
		V_BATCH_CNT NUMBER :=0; 
		V_LIMIT NUMBER :=1000; 
		V_START_DATE VARCHAR(14) :=NULL; 
		V_END_DATE VARCHAR(14) :=NULL; 

	BEGIN 	

		-- GET V_START_DATE 
		SELECT TO_CHAR(SYSDATE-1,'YYYYMMDD') || '000000' INTO V_START_DATE FROM DUAL; 
		SELECT TO_CHAR(SYSDATE,'YYYYMMDD') || '235959' INTO V_END_DATE FROM DUAL; 

		-- GET SEQUENCE 
		SELECT SEQ_MDM_BATCH.NEXTVAL INTO V_SEQ_MDM_BATCH FROM DUAL; 

		INSERT INTO MDM_BATCH_LOG (BATCH_ID, BATCH_TYPE, BATCH_CNT) VALUES (
			V_SEQ_MDM_BATCH, 'METEREVENT_LOG', 0 
		);

		-- UPDATE MDM_METEREVENT_LOG				 
        UPDATE MDM_METEREVENT_LOG SET BATCH_ID = V_SEQ_MDM_BATCH
        WHERE BATCH_ID IS NULL AND INSERT_DATETIME BETWEEN V_START_DATE AND V_END_DATE AND ROWNUM <= V_LIMIT;

		-- SELECT BATCH_CNT 
		SELECT COUNT(*) INTO V_BATCH_CNT FROM MDM_METEREVENT_LOG WHERE BATCH_ID = V_SEQ_MDM_BATCH;  

		IF V_BATCH_CNT > 0 THEN
			-- INSERT MDM_BATCH_LOG 
			UPDATE MDM_BATCH_LOG SET BATCH_CNT = V_BATCH_CNT WHERE BATCH_ID = V_SEQ_MDM_BATCH;		
		ELSE 
			DELETE FROM MDM_BATCH_LOG WHERE BATCH_ID = V_SEQ_MDM_BATCH;		
		END IF;

	END;

END PKG_MDM_BATCH_JOB;