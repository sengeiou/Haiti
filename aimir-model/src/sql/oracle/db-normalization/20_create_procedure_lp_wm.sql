CREATE OR REPLACE PROCEDURE AIMIR.LP_EXTERNAL_MERGE_WM(THREAD_NUM IN NUMBER, P_RESULT OUT VARCHAR2) IS         
        
STMT VARCHAR2(5000);     
START_TIME NUMBER;     
E_TIME NUMBER;     
        
BEGIN     
   
START_TIME := DBMS_UTILITY.GET_TIME;     
STMT := 'MERGE INTO AIMIR.LP_WM LP_TOBE USING AIMIR.LP_WM_EXT_'||THREAD_NUM||' LP_TOBE_EXT ';   
STMT := STMT||'ON (LP_TOBE.MDEV_ID = LP_TOBE_EXT.MDEV_ID AND LP_TOBE.YYYYMMDDHHMISS = LP_TOBE_EXT.YYYYMMDDHHMISS AND LP_TOBE.CHANNEL = LP_TOBE_EXT.CHANNEL AND LP_TOBE.MDEV_TYPE = LP_TOBE_EXT.MDEV_TYPE AND LP_TOBE.DST = LP_TOBE_EXT.DST) ';   
STMT := STMT||'WHEN MATCHED THEN UPDATE SET LP_TOBE.DEVICE_ID = LP_TOBE_EXT.DEVICE_ID, LP_TOBE.DEVICE_TYPE = LP_TOBE_EXT.DEVICE_TYPE, LP_TOBE.METERINGTYPE = LP_TOBE_EXT.METERINGTYPE, LP_TOBE.DEVICE_SERIAL = LP_TOBE_EXT.DEVICE_SERIAL, LP_TOBE.LP_STATUS = LP_TOBE_EXT.LP_STATUS, LP_TOBE.INTERVAL_YN = LP_TOBE_EXT.INTERVAL_YN, LP_TOBE.VALUE = LP_TOBE_EXT.VALUE, LP_TOBE.WRITEDATE = LP_TOBE_EXT.WRITEDATE, LP_TOBE.CONTRACT_ID = LP_TOBE_EXT.CONTRACT_ID, LP_TOBE.MODEM_TIME = LP_TOBE_EXT.MODEM_TIME, LP_TOBE.DCU_TIME = LP_TOBE_EXT.DCU_TIME ';   
STMT := STMT||'WHEN NOT MATCHED THEN INSERT VALUES (LP_TOBE_EXT.MDEV_ID, LP_TOBE_EXT.YYYYMMDDHHMISS, LP_TOBE_EXT.CHANNEL, LP_TOBE_EXT.MDEV_TYPE, LP_TOBE_EXT.DST, LP_TOBE_EXT.DEVICE_ID, LP_TOBE_EXT.DEVICE_TYPE, LP_TOBE_EXT.METERINGTYPE, LP_TOBE_EXT.DEVICE_SERIAL, LP_TOBE_EXT.LP_STATUS, LP_TOBE_EXT.INTERVAL_YN, LP_TOBE_EXT.VALUE, LP_TOBE_EXT.WRITEDATE, LP_TOBE_EXT.CONTRACT_ID, LP_TOBE_EXT.MODEM_TIME, LP_TOBE_EXT.DCU_TIME) ';    
EXECUTE IMMEDIATE STMT;    
     
E_TIME := DBMS_UTILITY.GET_TIME - START_TIME;     
      
P_RESULT := 'SUCESS [ELAPSED_TIME : '||E_TIME||']';      
      
EXCEPTION WHEN OTHERS THEN      
P_RESULT := 'ERROR [' || SQLERRM||']';      
                  
END;
