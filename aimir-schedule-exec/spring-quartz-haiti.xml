<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:property-placeholder location="config/schedule.properties" />

	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="poolName" value="springHikariCP" />
		<property name="dataSourceClassName" value="${jdbc.driverClassName}" />
		<property name="maximumPoolSize" value="10" />
		<property name="minimumIdle" value="5" />
		<property name="idleTimeout" value="30000" />

		<property name="dataSourceProperties">
			<props>
				<prop key="url">${jdbc.url}</prop>
				<prop key="user">${jdbc.username}</prop>
				<prop key="password">${jdbc.password}</prop>
			</props>
		</property>
	</bean>

	<!-- HikariCP configuration -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<bean id="auditDataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<!-- Audit Log Support Hibernate Session Factory -->
	<bean id="auditSessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="auditDataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.aimir.model.system.AuditLog</value>
			</list>
		</property>
	</bean>

	<bean id="auditLogInterceptor" class="com.aimir.audit.AuditLogInterceptor">
		<property name="transactionManager" ref="auditTransactionManager" />
	</bean>
	
	<bean id="sessionContextFactory"
		class="org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean">
		<property name="targetBeanName" value="sessionContext" />
	</bean>

	<!-- Transaction manager for a single Hibernate SessionFactory (alternative 
		to JTA) -->
	<bean id="auditTransactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="auditSessionFactory" />
	</bean>

	<!-- Annotation Support Hibernate Session Factory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="entityInterceptor" ref="auditLogInterceptor" />
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- <prop key="hibernate.default_schema">${jdbc.username}</prop>oracle 
					only -->
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
				<prop key="hibernate.use_sql_comments">false</prop>
				<!--<prop key="hibernate.hbm2ddl.auto">create-drop</prop> -->
				<!--<prop key="hibernate.hbm2ddl.auto">create</prop> -->
				<!--<prop key="hibernate.hbm2ddl.auto">validate</prop> -->
				<prop key="hibernate.hbm2ddl.auto">none</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
				<!-- 0:none, 1:read_uncommitted, 2:read_committed, 4:repeatable_read, 
					8:serializable -->
				<prop key="hibernate.connection.isolation">1</prop>
				<!--<prop key="hibernate.query.substitutions">Y</prop> -->
				<!--<prop key="hibernate.cache.use_second_level_cache">true</prop> -->
				<!--<prop key="hibernate.cache.use_second_level_cache">org.hibernate.cache.EhCacheProvider</prop> -->
				<!-- Turn batching off for better error messages under PostgreSQL> -->
				<!--prop key="hibernate.jdbc.batch_size">0</prop -->
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.aimir.model.*</value>
			</list>
		</property>
	</bean>

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <!-- Activates scanning of @Autowired -->            
    <context:annotation-config/>

    <!-- Scans for @Repository, @Service -->
    <context:component-scan base-package="com.aimir">
        <context:exclude-filter type="regex" expression="com\.aimir\.fep.*"/>
    </context:component-scan>
    
    <!-- Enable @Transactional support -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- Enable @AspectJ support -->
    <aop:aspectj-autoproxy/>
    
    <!--  Schedule -->
    <!-- 
    <bean id="deleteSensorJob" class="com.aimir.schedule.job.DeleteSensorJob" /> 
    <bean id="EDHBalanceMonitorDemoTask" class="com.aimir.schedule.task.EDHBalanceMonitorDemoTask" />
    <bean id="EDHBlockDailyEMBillingInfoSaveTask" class="com.aimir.schedule.task.EDHBlockDailyEMBillingInfoSaveV2Task" />
    <bean id="BalanceMonitoringTask" class="com.aimir.schedule.task.BalanceMonitorV2Task"/>
    <bean id="prepaySendSMSTask" class="com.aimir.schedule.task.PrepaySendSMSEDHTask"/>
    <bean id="sendUsageSMSTask" class="com.aimir.schedule.task.PrepaySendUsageSMSTask"/>
    <bean id="mcuUnitScanningTask" class="com.aimir.schedule.task.McuUnitScanningTask"/>
    -->
	
	<!--
    <bean name="EDHBalanceMonitorDemoJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="com.aimir.schedule.job.EDHBalanceMonitorDemoJob"/>
    </bean>

    <bean name="BlockTariffCalculateJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="com.aimir.schedule.job.EDHDailyBillingInfoSaveJob"/>
    </bean>

    <bean name="BalanceMonitoringJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="com.aimir.schedule.job.BalanceMonitorJob"/>
    </bean>

    <bean name="PrepaySendSMSJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="com.aimir.schedule.job.PrepaySendSMSEDHJob"/>
    </bean>

    <bean name="PrepaySendUsageSMSJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="com.aimir.schedule.job.PrepaySendUsageSMSJob"/>
    </bean>
    
    <bean name="McuUnitScanningJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="com.aimir.schedule.job.McuUnitScanningJob"/>
    </bean>

    <bean id="blockTariffCalculateTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="BlockTariffCalculateJob"/>
        <property name="cronExpression" value="0 0 * * * ?" />
    </bean>

    <bean id="balanceMonitoringTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="BalanceMonitoringJob"/>
        <property name="cronExpression" value="0 15 * * * ?" />
    </bean>

    <bean id="prepaySendSMSTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="PrepaySendSMSJob"/>
        <property name="cronExpression" value="0 30 10 * * ?" />
    </bean>
    <bean id="edhBalanceMonitorDemoTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="EDHBalanceMonitorDemoJob"/>
        <property name="cronExpression" value="0 0 0 1 3 ?" />
    </bean>
    <bean id="mcuUnitScanningTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="McuUnitScanningJob"/>
        <property name="cronExpression" value="0 15 0 ? * 1" />
    </bean>    
	-->

    <bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobDetails">
            <list>
		<!-- <ref bean="McuUnitScanningJob" /> -->
            </list>
        </property>
        
        <property name="triggers">
            <list>
		<!-- <ref bean="mcuUnitScanningTrigger" /> -->
            </list>
        </property>
    </bean>
    
    <bean id="mbeanExporter" class="org.springframework.jmx.export.MBeanExporter">
       <property name="beans">
           <map>
               <entry key="Adapter:name=Scheduler" value-ref="schedulerFactory"/>
           </map>
       </property>
       <property name="registrationBehaviorName" value="REGISTRATION_REPLACE_EXISTING"/>
    </bean>
</beans>
