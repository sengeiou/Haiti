package com.aimir.fep.protocol.fmp.frame.service.entry;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;

import com.aimir.fep.protocol.fmp.datatype.*;
import com.aimir.fep.protocol.fmp.frame.service.Entry;

/**
 * sysEntry
 * generated by MIB Tool, Do not modify
 *
 * @author Y.S Kim (sorimo@nuritelecom.com)
 * @version $Rev: 1.1 $, $Date: 2005-11-21 15:59:15 +0900 $,
 * <pre>
 * &lt;complexType name="sysEntry">
 *   &lt;complexContent>
 *     &lt;extension base="{http://server.ws.command.fep.aimir.com/}entry">
 *       &lt;sequence>
 *         &lt;element name="sysMask" type="{http://server.ws.command.fep.aimir.com/}uint" minOccurs="0"/>
 *         &lt;element name="sysID" type="{http://server.ws.command.fep.aimir.com/}uint" minOccurs="0"/>
 *         &lt;element name="sysType" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysName" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *         &lt;element name="sysDescr" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *         &lt;element name="sysLocation" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *         &lt;element name="sysContact" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *         &lt;element name="sysHwVersion" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysSwVersion" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysPhoneNumber" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *         &lt;element name="sysEtherType" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysMobileType" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysMobileMode" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysMobileAPN" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysUpTime" type="{http://server.ws.command.fep.aimir.com/}uint" minOccurs="0"/>
 *         &lt;element name="sysTime" type="{http://server.ws.command.fep.aimir.com/}timestamp" minOccurs="0"/>
 *         &lt;element name="sysCurTemp" type="{http://server.ws.command.fep.aimir.com/}int" minOccurs="0"/>
 *         &lt;element name="sysMinTemp" type="{http://server.ws.command.fep.aimir.com/}int" minOccurs="0"/>
 *         &lt;element name="sysMaxTemp" type="{http://server.ws.command.fep.aimir.com/}int" minOccurs="0"/>
 *         &lt;element name="sysServer" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *         &lt;element name="sysServerPort" type="{http://server.ws.command.fep.aimir.com/}uint" minOccurs="0"/>
 *         &lt;element name="sysServerAlarmPort" type="{http://server.ws.command.fep.aimir.com/}uint" minOccurs="0"/>
 *         &lt;element name="sysLocalPort" type="{http://server.ws.command.fep.aimir.com/}uint" minOccurs="0"/>
 *         &lt;element name="sysState" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysVendor" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysModel" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysCircuitMode" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysMobileVendor" type="{http://server.ws.command.fep.aimir.com/}int" minOccurs="0"/>
 *         &lt;element name="sysMobileAccessPointName" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *         &lt;element name="sysSwRevision" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *         &lt;element name="sysResetReason" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="sysJoinNodeCount" type="{http://server.ws.command.fep.aimir.com/}uint" minOccurs="0"/>
 *         &lt;element name="sysTimeZone" type="{http://server.ws.command.fep.aimir.com/}short" minOccurs="0"/>
 *         &lt;element name="sysOpMode" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "sysEntry", propOrder = {
    "sysMask",
    "sysID",
    "sysType",
    "sysName",
    "sysDescr",
    "sysLocation",
    "sysContact",
    "sysHwVersion",
    "sysSwVersion",
    "sysPhoneNumber",
    "sysEtherType",
    "sysMobileType",
    "sysMobileMode",
    "sysMobileAPN",
    "sysUpTime",
    "sysTime",
    "sysCurTemp",
    "sysMinTemp",
    "sysMaxTemp",
    "sysServer",
    "sysServerPort",
    "sysServerAlarmPort",
    "sysLocalPort",
    "sysState",
    "sysVendor",
    "sysModel",
    "sysCircuitMode",
    "sysMobileVendor",
    "sysMobileAccessPointName",
    "sysSwRevision",
    "sysResetReason",
    "sysJoinNodeCount",
    "sysTimeZone",
    "sysOpMode"
})
public class sysEntry extends Entry {

    /* 2.1.1 */
	public UINT sysMask = 
			new UINT();

	/* 2.1.2 */
	public UINT sysID = 
			new UINT();

	/* 2.1.3 */
	public BYTE sysType = 
			new BYTE();

	/* 2.1.4 */
	public OCTET sysName = 
			new OCTET(64);

	/* 2.1.5 */
	public OCTET sysDescr = 
			new OCTET(64);

	/* 2.1.6 */
	public OCTET sysLocation = 
			new OCTET(64);

	/* 2.1.7 */
	public OCTET sysContact = 
			new OCTET(64);

	/* 2.1.8 */
	public BYTE sysHwVersion = 
			new BYTE();

	/* 2.1.9 */
	public BYTE sysSwVersion = 
			new BYTE();

	/* 2.1.10 */
	public OCTET sysPhoneNumber = 
			new OCTET(16);

	/* 2.1.11 */
	public BYTE sysEtherType = 
			new BYTE();

	/* 2.1.12 */
	public BYTE sysMobileType = 
			new BYTE();

	/* 2.1.13 */
	public BYTE sysMobileMode = 
			new BYTE();

	/* 2.1.14 deprecated 2.1.29 */
	public BYTE sysMobileAPN = 
			new BYTE();

	/* 2.1.15 */
	public UINT sysUpTime = 
			new UINT();

	/* 2.1.16 */
	public TIMESTAMP sysTime = 
			new TIMESTAMP(7);

	/* 2.1.17 */
	public INT sysCurTemp = 
			new INT();

	/* 2.1.18 */
	public INT sysMinTemp = 
			new INT();

	/* 2.1.19 */
	public INT sysMaxTemp = 
			new INT();

	/* 2.1.20 */
	public OCTET sysServer = new OCTET(256); 

	/* 2.1.21 */
	public UINT sysServerPort = 
			new UINT();

	/* 2.1.22 */
	public UINT sysServerAlarmPort = 
			new UINT();

	/* 2.1.23 */
	public UINT sysLocalPort = 
			new UINT();

	/* 2.1.24 */
	public BYTE sysState = 
			new BYTE();

	/* 2.1.25 */
	public BYTE sysVendor = 
			new BYTE();

	/* 2.1.26 */
	public BYTE sysModel = 
			new BYTE();

	/* 2.1.27 deprecated same as 2.1.13 */
	public BYTE sysCircuitMode =
	        new BYTE();
	
	/* 2.1.28 */
	public INT sysMobileVendor =
	        new INT();
	
	/* 2.1.29 */
	public OCTET sysMobileAccessPointName =
	        new OCTET();
	
	/* 2.1.30 */
	public OCTET sysSwRevision =
	        new OCTET();

	/* 2.1.31 */
	public BYTE sysResetReason = new BYTE();
	
	/* 2.1.32 */
	public UINT sysJoinNodeCount = new UINT();
	
	/* 2.1.33 */
	public SHORT sysTimeZone = new SHORT();
	
	/* 2.1.34 */
	public BYTE sysOpMode = new BYTE();
	
	@XmlTransient
	public UINT getSysMask()
	{
		 return this.sysMask;
	}

	public void setSysMask(UINT sysMask)
	{
		 this.sysMask=sysMask;
	}

	@XmlTransient
	public UINT getSysID()
	{
		 return this.sysID;
	}

	public void setSysID(UINT sysID)
	{
		 this.sysID=sysID;
	}

	@XmlTransient
	public BYTE getSysType()
	{
		 return this.sysType;
	}

	public void setSysType(BYTE sysType)
	{
		 this.sysType=sysType;
	}

	@XmlTransient
	public OCTET getSysName()
	{
		 return this.sysName;
	}

	public void setSysName(OCTET sysName)
	{
		 this.sysName=sysName;
	}

	@XmlTransient
	public OCTET getSysDescr()
	{
		 return this.sysDescr;
	}

	public void setSysDescr(OCTET sysDescr)
	{
		 this.sysDescr=sysDescr;
	}

	@XmlTransient
	public OCTET getSysLocation()
	{
		 return this.sysLocation;
	}

	public void setSysLocation(OCTET sysLocation)
	{
		 this.sysLocation=sysLocation;
	}

	@XmlTransient
	public OCTET getSysContact()
	{
		 return this.sysContact;
	}

	public void setSysContact(OCTET sysContact)
	{
		 this.sysContact=sysContact;
	}

	@XmlTransient
	public BYTE getSysHwVersion()
	{
		 return this.sysHwVersion;
	}

	public void setSysHwVersion(BYTE sysHwVersion)
	{
		 this.sysHwVersion=sysHwVersion;
	}

	@XmlTransient
	public BYTE getSysSwVersion()
	{
		 return this.sysSwVersion;
	}

	public void setSysSwVersion(BYTE sysSwVersion)
	{
		 this.sysSwVersion=sysSwVersion;
	}

	@XmlTransient
	public OCTET getSysPhoneNumber()
	{
		 return this.sysPhoneNumber;
	}

	public void setSysPhoneNumber(OCTET sysPhoneNumber)
	{
		 this.sysPhoneNumber=sysPhoneNumber;
	}

	@XmlTransient
	public BYTE getSysEtherType()
	{
		 return this.sysEtherType;
	}

	public void setSysEtherType(BYTE sysEtherType)
	{
		 this.sysEtherType=sysEtherType;
	}

	@XmlTransient
	public BYTE getSysMobileType()
	{
		 return this.sysMobileType;
	}

	public void setSysMobileType(BYTE sysMobileType)
	{
		 this.sysMobileType=sysMobileType;
	}

	@XmlTransient
	public BYTE getSysMobileMode()
	{
		 return this.sysMobileMode;
	}

	public void setSysMobileMode(BYTE sysMobileMode)
	{
		 this.sysMobileMode=sysMobileMode;
	}

	@XmlTransient
	public BYTE getSysMobileAPN()
	{
		 return this.sysMobileAPN;
	}

	public void setSysMobileAPN(BYTE sysMobileAPN)
	{
		 this.sysMobileAPN=sysMobileAPN;
	}

	@XmlTransient
	public UINT getSysUpTime()
	{
		 return this.sysUpTime;
	}

	public void setSysUpTime(UINT sysUpTime)
	{
		 this.sysUpTime=sysUpTime;
	}

	@XmlTransient
	public TIMESTAMP getSysTime()
	{
		 return this.sysTime;
	}

	public void setSysTime(TIMESTAMP sysTime)
	{
		 this.sysTime=sysTime;
	}

	@XmlTransient
	public INT getSysCurTemp()
	{
		 return this.sysCurTemp;
	}

	public void setSysCurTemp(INT sysCurTemp)
	{
		 this.sysCurTemp=sysCurTemp;
	}

	@XmlTransient
	public INT getSysMinTemp()
	{
		 return this.sysMinTemp;
	}

	public void setSysMinTemp(INT sysMinTemp)
	{
		 this.sysMinTemp=sysMinTemp;
	}

	@XmlTransient
	public INT getSysMaxTemp()
	{
		 return this.sysMaxTemp;
	}

	public void setSysMaxTemp(INT sysMaxTemp)
	{
		 this.sysMaxTemp=sysMaxTemp;
	}

	@XmlTransient
	public OCTET getSysServer()
	{
		 return this.sysServer;
	}

	public void setSysServer(OCTET sysServer)
	{
		 this.sysServer=sysServer;
	}

	@XmlTransient
	public UINT getSysServerPort()
	{
		 return this.sysServerPort;
	}

	public void setSysServerPort(UINT sysServerPort)
	{
		 this.sysServerPort=sysServerPort;
	}

	@XmlTransient
	public UINT getSysServerAlarmPort()
	{
		 return this.sysServerAlarmPort;
	}

	public void setSysServerAlarmPort(UINT sysServerAlarmPort)
	{
		 this.sysServerAlarmPort=sysServerAlarmPort;
	}

	@XmlTransient
	public UINT getSysLocalPort()
	{
		 return this.sysLocalPort;
	}

	public void setSysLocalPort(UINT sysLocalPort)
	{
		 this.sysLocalPort=sysLocalPort;
	}

	@XmlTransient
	public BYTE getSysState()
	{
		 return this.sysState;
	}

	public void setSysState(BYTE sysState)
	{
		 this.sysState=sysState;
	}

	@XmlTransient
	public BYTE getSysVendor()
	{
		 return this.sysVendor;
	}

	public void setSysVendor(BYTE sysVendor)
	{
		 this.sysVendor=sysVendor;
	}

	@XmlTransient
	public BYTE getSysModel()
	{
		 return this.sysModel;
	}

	public void setSysModel(BYTE sysModel)
	{
		 this.sysModel=sysModel;
	}

	@XmlTransient
    public BYTE getSysCircuitMode()
    {
        return sysCircuitMode;
    }

    public void setSysCircuitMode(BYTE sysCircuitMode)
    {
        this.sysCircuitMode = sysCircuitMode;
    }

    @XmlTransient
    public INT getSysMobileVendor()
    {
        return sysMobileVendor;
    }

    public void setSysMobileVendor(INT sysMobileVendor)
    {
        this.sysMobileVendor = sysMobileVendor;
    }

    @XmlTransient
    public OCTET getSysMobileAccessPointName()
    {
        return sysMobileAccessPointName;
    }

    public void setSysMobileAccessPointName(OCTET sysMobileAccessPointName)
    {
        this.sysMobileAccessPointName = sysMobileAccessPointName;
    }

    @XmlTransient
    public OCTET getSysSwRevision()
    {
        return sysSwRevision;
    }

    public void setSysSwRevision(OCTET sysSwRevision)
    {
        this.sysSwRevision = sysSwRevision;
    }

    @XmlTransient
    public BYTE getSysResetReason()
    {
        return sysResetReason;
    }

    public void setSysResetReason(BYTE sysResetReason)
    {
        this.sysResetReason = sysResetReason;
    }

    @XmlTransient
    public UINT getSysJoinNodeCount()
    {
        return sysJoinNodeCount;
    }

    public void setSysJoinNodeCount(UINT sysJoinNodeCount)
    {
        this.sysJoinNodeCount = sysJoinNodeCount;
    }

    @XmlTransient
    public SHORT getSysTimeZone()
    {
        return sysTimeZone;
    }

    public void setSysTimeZone(SHORT sysTimeZone)
    {
        this.sysTimeZone = sysTimeZone;
    }

    @XmlTransient
    public BYTE getSysOpMode()
    {
        return sysOpMode;
    }

    public void setSysOpMode(BYTE sysOpMode)
    {
        this.sysOpMode = sysOpMode;
    }

    public String toString()
    {
        StringBuffer sb = new StringBuffer();

		sb.append("CLASS["+this.getClass().getName()+"]\n");
		sb.append("sysMask: " + sysMask + "\n");
		sb.append("sysID: " + sysID + "\n");
		sb.append("sysType: " + sysType + "\n");
		sb.append("sysName: " + sysName + "\n");
		sb.append("sysDescr: " + sysDescr + "\n");
		sb.append("sysLocation: " + sysLocation + "\n");
		sb.append("sysContact: " + sysContact + "\n");
		sb.append("sysHwVersion: " + sysHwVersion + "\n");
		sb.append("sysSwVersion: " + sysSwVersion + "\n");
		sb.append("sysPhoneNumber: " + sysPhoneNumber + "\n");
		sb.append("sysEtherType: " + sysEtherType + "\n");
		sb.append("sysMobileType: " + sysMobileType + "\n");
		sb.append("sysMobileMode: " + sysMobileMode + "\n");
		sb.append("sysMobileAPN: " + sysMobileAPN + "\n");
		sb.append("sysUpTime: " + sysUpTime + "\n");
		sb.append("sysTime: " + sysTime + "\n");
		sb.append("sysCurTemp: " + sysCurTemp + "\n");
		sb.append("sysMinTemp: " + sysMinTemp + "\n");
		sb.append("sysMaxTemp: " + sysMaxTemp + "\n");
		sb.append("sysServer: " + sysServer + "\n");
		sb.append("sysServerPort: " + sysServerPort + "\n");
		sb.append("sysServerAlarmPort: " + sysServerAlarmPort + "\n");
		sb.append("sysLocalPort: " + sysLocalPort + "\n");
		sb.append("sysState: " + sysState + "\n");
		sb.append("sysVendor: " + sysVendor + "\n");
		sb.append("sysModel: " + sysModel + "\n");
		sb.append("sysCircuitMode: " + sysCircuitMode + "\n");
		sb.append("sysMobileVendor: " + sysMobileVendor + "\n");
		sb.append("sysMobileAccessPointName: " + sysMobileAccessPointName + "\n");
		sb.append("sysSwRevision: " + sysSwRevision + "\n");
		sb.append("sysResetReason: " + sysResetReason + "\n");
		sb.append("sysJoinNodeCount: " + sysJoinNodeCount + "\n");
		sb.append("sysTimeZone: " + sysTimeZone + "\n");
		sb.append("sysOpMode: " + sysOpMode + "\n");

        return sb.toString();
    }
}
