package com.aimir.fep.protocol.fmp.frame.service.entry;

import javax.xml.bind.annotation.XmlTransient;

import com.aimir.fep.protocol.fmp.datatype.*;
import com.aimir.fep.protocol.fmp.frame.service.Entry;

/**
 * gpsEntry
 * generated by MIB Tool, Do not modify
 *
 * @author Y.S Kim (sorimo@nuritelecom.com)
 * @version $Rev: 1 $, $Date: 2005-11-21 15:59:15 +0900 $,
 */
public class gpsEntry extends Entry {
	public BYTE gpsFixPosition = 
			new BYTE();

	public BYTE gpsCount = 
			new BYTE();

	public TIMESTAMP gpsTime = 
			new TIMESTAMP(7);

	public OCTET gpsPosN = 
			new OCTET(32);

	public BYTE gpsTimezone = 
			new BYTE();

	@XmlTransient
	public BYTE getGpsFixPosition()
	{
		 return this.gpsFixPosition;
	}

	public void setGpsFixPosition(BYTE gpsFixPosition)
	{
		 this.gpsFixPosition=gpsFixPosition;
	}

	@XmlTransient
	public BYTE getGpsCount()
	{
		 return this.gpsCount;
	}

	public void setGpsCount(BYTE gpsCount)
	{
		 this.gpsCount=gpsCount;
	}

	@XmlTransient
	public TIMESTAMP getGpsTime()
	{
		 return this.gpsTime;
	}

	public void setGpsTime(TIMESTAMP gpsTime)
	{
		 this.gpsTime=gpsTime;
	}

	@XmlTransient
	public OCTET getGpsPosN()
	{
		 return this.gpsPosN;
	}

	public void setGpsPosN(OCTET gpsPosN)
	{
		 this.gpsPosN=gpsPosN;
	}

	@XmlTransient
	public BYTE getGpsTimezone()
	{
		 return this.gpsTimezone;
	}

	public void setGpsTimezone(BYTE gpsTimezone)
	{
		 this.gpsTimezone=gpsTimezone;
	}

    public String toString()
    {
        StringBuffer sb = new StringBuffer();

		sb.append("CLASS["+this.getClass().getName()+"]\n");
		sb.append("gpsFixPosition: " + gpsFixPosition + "\n");
		sb.append("gpsCount: " + gpsCount + "\n");
		sb.append("gpsTime: " + gpsTime + "\n");
		sb.append("gpsPosN: " + gpsPosN + "\n");
		sb.append("gpsTimezone: " + gpsTimezone + "\n");


        return sb.toString();
    }

}
