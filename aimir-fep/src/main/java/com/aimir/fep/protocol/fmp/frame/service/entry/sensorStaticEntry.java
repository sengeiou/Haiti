package com.aimir.fep.protocol.fmp.frame.service.entry;

import javax.xml.bind.annotation.XmlTransient;

import com.aimir.fep.protocol.fmp.datatype.*;
import com.aimir.fep.protocol.fmp.frame.service.Entry;

/**
 * sensorStaticEntry
 * generated by MIB Tool, Do not modify
 *
 * @author Y.K Park (goodjob@nuritelecom.com)
 * @version $Rev: 1 $, $Date: 2006-10-25 15:59:15 +0900 $,
 */
public class sensorStaticEntry extends Entry {

	public UINT sensorSendBytes = 
		new UINT();
	public UINT sensorRecvBytes = 
		new UINT();
	public UINT sensorSendPacket = 
		new UINT();
	public UINT sensorRecvPacket = 
		new UINT();
	public UINT sensorErrorBytes = 
		new UINT();
	public UINT sensorLinkCount  =
		new UINT();
	public UINT sensorTimeoutCount =
		new UINT();
	public UINT sensorMinPollingResponse =
		new UINT();
	public UINT sensorMaxPollingResponse =
		new UINT();
	public UINT sensorMinAliveSecond = 
		new UINT();
	public UINT sensorMaxAliveSecond =
		new UINT();

	@XmlTransient
	public UINT getSensorSendBytes()
	{
		 return this.sensorSendBytes;
	}
	
	public void setSensorSendBytes(UINT sensorSendBytes)
	{
		this.sensorSendBytes = sensorSendBytes;
	}

	@XmlTransient
	public UINT getSensorRecvBytes()
	{
		return this.sensorRecvBytes;
	}
	
	public void setSensorRecvBytes(UINT sensorRecvBytes)
	{
		this.sensorRecvBytes = sensorRecvBytes;
	}
	
	@XmlTransient
	public UINT getSensorSendPacket()
	{
		return this.sensorSendPacket ;
	}
	
	public void setSensorSendPacket (UINT sensorSendPacket )
	{
		this.sensorSendPacket  = sensorSendPacket ;
	}
	
	@XmlTransient
	public UINT getSensorRecvPacket()
	{
		return this.sensorRecvPacket;
	}
	
	public void setSensorRecvPacket(UINT sensorRecvPacket)
	{
		this.sensorRecvPacket = sensorRecvPacket;
	}
	
	@XmlTransient
	public UINT getSensorErrorBytes()
	{
		return this.sensorErrorBytes;
	}
	
	public void setSensorErrorBytes(UINT sensorErrorBytes)
	{
		this.sensorErrorBytes = sensorErrorBytes;
	}
	
	@XmlTransient
	public UINT getSensorLinkCount()
	{
		return this.sensorLinkCount;
	}
	
	public void setSensorLinkCount(UINT sensorLinkCount)
	{
		this.sensorLinkCount = sensorLinkCount;
	}
	
	@XmlTransient
	public UINT getSensorTimeoutCount()
	{
		return this.sensorTimeoutCount;
	}
	
	public void setSensorTimeoutCount(UINT sensorTimeoutCount)
	{
		this.sensorTimeoutCount = sensorTimeoutCount;
	}
	
	@XmlTransient
	public UINT getSensorMinPollingResponse()
	{
		return this.sensorMinPollingResponse;
	}
	
	public void setSensorMinPollingResponse(UINT sensorMinPollingResponse)
	{
		this.sensorMinPollingResponse = sensorMinPollingResponse;
	}
	
	@XmlTransient
	public UINT getSensorMaxPollingResponse()
	{
		return this.sensorMaxPollingResponse;
	}
	
	public void setSensorMaxPollingResponse(UINT sensorMaxPollingResponse)
	{
		this.sensorMaxPollingResponse = sensorMaxPollingResponse;
	}
	
	@XmlTransient
	public UINT getSensorMinAliveSecond()
	{
		return this.sensorMinAliveSecond;
	}
	
	public void setSensorMinAliveSecond(UINT sensorMinAliveSecond)
	{
		this.sensorMinAliveSecond = sensorMinAliveSecond;
	}
	
	@XmlTransient
	public UINT getSensorMaxAliveSecond()
	{
		return this.sensorMaxAliveSecond;
	}
	
	public void setSensorMaxAliveSecond(UINT sensorMaxAliveSecond)
	{
		this.sensorMaxAliveSecond = sensorMaxAliveSecond;
	}


    public String toString()
    {
        StringBuffer sb = new StringBuffer();

		sb.append("CLASS["+this.getClass().getName()+"]\n");
		sb.append("sensorSendBytes: " + sensorSendBytes + "\n");
		sb.append("sensorRecvBytes: " + sensorRecvBytes + "\n");
		sb.append("sensorSendPacket: " + sensorSendPacket + "\n");
		sb.append("sensorRecvPacket: " + sensorRecvPacket + "\n");
		sb.append("sensorErrorBytes: " + sensorErrorBytes + "\n");
		sb.append("sensorLinkCount: " + sensorLinkCount + "\n");
		sb.append("sensorTimeoutCount: " + sensorTimeoutCount + "\n");
		sb.append("sensorMinPollingResponse: " + sensorMinPollingResponse + "\n");
		sb.append("sensorMaxPollingResponse: " + sensorMaxPollingResponse + "\n");
		sb.append("sensorMinAliveSecond: " + sensorMinAliveSecond + "\n");
		sb.append("sensorMaxAliveSecond: " + sensorMaxAliveSecond + "\n");

        return sb.toString();
    }
}
