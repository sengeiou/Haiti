<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:jaxws="http://cxf.apache.org/jaxws"
  xmlns:jaxrs="http://cxf.apache.org/jaxrs"
  xmlns:sec="http://cxf.apache.org/configuration/security" 
  xmlns:http="http://cxf.apache.org/transports/http/configuration"
  xmlns:httpj="http://cxf.apache.org/transports/http-jetty/configuration"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
    http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
    http://cxf.apache.org/configuration/security http://cxf.apache.org/schemas/configuration/security.xsd
    http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
    http://cxf.apache.org/transports/http-jetty/configuration http://cxf.apache.org/schemas/configuration/http-jetty.xsd">

  <context:property-placeholder
    location="classpath:config/jdbc.properties,classpath:config/mars.properties,classpath:config/cxf_service.properties" />

  <import resource="classpath:META-INF/cxf/cxf.xml" />
  <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

  <!-- Activates scanning of @Autowired -->
  <context:annotation-config />

  <!-- Scans for @Repository, @Service -->
  <context:component-scan base-package="com.oracle.xmlns.ssys">
    <context:exclude-filter type="regex" expression=".*.NuriMeterDataServer"/>
    <context:exclude-filter type="regex" expression=".*.NuriEventsServer"/>
  </context:component-scan>

  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
    <property name="poolName" value="springHikariCP" />
    <property name="dataSourceClassName" value="${jdbc.driverClassName}" />
    <property name="maximumPoolSize" value="${jdbc.maximumSize}" />
    <property name="minimumIdle" value="${jdbc.minimumIdleSize}" />
    <property name="idleTimeout" value="30000" />
    <property name="dataSourceProperties">
      <props>
        <prop key="url">${jdbc.url}</prop>
        <prop key="user">${jdbc.username}</prop>
        <prop key="password">${jdbc.password}</prop>
      </props>
    </property>
  </bean>

  <!-- HikariCP configuration -->
  <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
    destroy-method="close">
    <constructor-arg ref="hikariConfig" />
  </bean>

  <bean id="transactionManager"
    class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>

  <tx:annotation-driven transaction-manager="transactionManager" />

  <bean id="fileDumpInInterceptor" class="com.aimir.mars.util.SoapFileDumpInInterceptor"/>
  <bean id="fileDumpOutInterceptor" class="com.aimir.mars.util.SoapFileDumpOutInterceptor"/>

  <jaxws:endpoint id="NuriMeterData"
    implementorClass="com.oracle.xmlns.ssys.nurimeterdataproxy.nurimeterdata.NuriMeterDataServerOld"
    implementor="#nuriMeterDataServer"
    address="/NuriMeterData">
    <jaxws:properties>
      <entry key="faultStackTraceEnabled" value="true" />
      <entry key="exceptionMessageCauseEnabled" value="true" />
      <entry key="schema-validation-enabled" value="true" />
    </jaxws:properties>
    <jaxws:inInterceptors>
      <ref bean="fileDumpInInterceptor"/>
    </jaxws:inInterceptors>
    <jaxws:outInterceptors>
      <ref bean="fileDumpOutInterceptor"/>
    </jaxws:outInterceptors>
    <jaxws:features>
      <bean class="org.apache.cxf.feature.LoggingFeature" />
    </jaxws:features>
  </jaxws:endpoint>

  <jaxws:endpoint id="NuriEvents"
    implementorClass="com.oracle.xmlns.ssys.nurieventsproxy.nurieventsproxy.NuriEventsServerOld"
    implementor="#nuriEventsServer"
    address="/NuriEvents">
    <jaxws:properties>
      <entry key="faultStackTraceEnabled" value="true" />
      <entry key="exceptionMessageCauseEnabled" value="true" />
      <entry key="schema-validation-enabled" value="true" />
    </jaxws:properties>
    <jaxws:inInterceptors>
      <ref bean="fileDumpInInterceptor"/>
    </jaxws:inInterceptors>
    <jaxws:outInterceptors>
      <ref bean="fileDumpOutInterceptor"/>
    </jaxws:outInterceptors>
    <jaxws:features>
      <bean class="org.apache.cxf.feature.LoggingFeature" />
    </jaxws:features>
  </jaxws:endpoint>

</beans>