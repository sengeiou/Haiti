<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="config/schedule.properties"/>

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="15"/>
        <property name="maxIdle" value="10"/>
        <!--  <property name="validationQuery" value="select 1 from dual"/> -->
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
    </bean>

    <bean id="meteringAnalyzer" class="com.bems.util.MeteringAnalyzer"/>
    
    <bean id="meteringAnalyzerJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="meteringAnalyzer"/>
        <property name="targetMethod" value="save"/>
        <property name="concurrent" value="false"/>
    </bean>
    
    <bean id="meteringAnalyzerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="meteringAnalyzerJob"/>
        <property name="cronExpression" value="${cron.metering.analysis}"/>
    </bean>
    
    <bean id="pointAnalyzer" class="com.bems.util.PointAnalyzer"/>
    
    <bean id="pointAnalyzerJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="pointAnalyzer"/>
        <property name="targetMethod" value="saveValue"/>
        <property name="concurrent" value="false"/>
    </bean>
    
    <bean id="pointAnalyzerTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="pointAnalyzerJob"/>
        <property name="cronExpression" value="${cron.point.analysis}"/>
    </bean>
    
    <bean id="mailSenderMain" class="com.bems.util.MailSender">
        <property name="mailSenderImpl" ref="mailSender"/>
    </bean>
    
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="smtp.gmail.com"/>
        <property name="port" value="465"/>
        <property name="username" value="js.elevas"/>
        <property name="password" value="pjs09178611"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.socketFactory.port">465</prop>
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>     
                <prop key="mail.smtp.socketFactory.fallback">false</prop>           
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
    </bean>
    
    <bean id="mailSenderJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="mailSenderMain"/>
        <property name="targetMethod" value="send1"/>
        <property name="concurrent" value="false"/>
    </bean>
    
    <bean id="mailSenderTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail" ref="mailSenderJob"/>
        <property name="repeatInterval" value="120000" />
        <property name="startDelay" value="10000" />
    </bean>
    
    <bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="meteringAnalyzerTrigger"/>
                <ref bean="pointAnalyzerTrigger"/>
                <ref bean="mailSenderTrigger"/>
            </list>
        </property>
        <property name="dataSource" ref="dataSource"/>
        <property name="autoStartup" value="true"/>
        <property name="overwriteExistingJobs" value="true"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>
</beans>